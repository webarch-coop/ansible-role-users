# {{ ansible_managed }} 

{%- for vhost,vhost_config in item.value.users_apache_virtual_hosts.items() %}

# {{ vhost_config.users_apache_server_name }}
# {{ item.value.users_home | default(users_basedir + '/' + item.key) }}/{{ users_sites_dir }}/{{ vhost }}
<VirtualHost *:80>
  ServerName {{ vhost_config.users_apache_server_name }}
  {%- if vhost_config.users_apache_server_aliases is defined %}
  ServerAlias{% for alias in vhost_config.users_apache_server_aliases %} {{ alias }}{% endfor %}
  {%- endif %}
  RedirectMatch 301 ^(?!/\.well-known/acme-challenge/).* https://{{ vhost_config.users_apache_server_name }}$0
</VirtualHost>
# {{ vhost_config.users_apache_server_name }}
# {{ item.value.users_home | default(users_basedir + '/' + item.key) }}/{{ users_sites_dir }}/{{ vhost }}
<VirtualHost *:443>
  ServerName {{ vhost_config.users_apache_server_name }}
  {%- if vhost_config.users_apache_server_aliases is defined %}
  ServerAlias{% for alias in vhost_config.users_apache_server_aliases %} {{ alias }}{% endfor %}
  {%- endif %}
  {%- if apache_mods_enabled is defined and "suexec" in apache_mods_enabled %}
  <IfModule suexec_module>
    SuexecUserGroup {{ item.key }} {{ item.key }}
  </IfModule>
  {%- endif %}
  {%- if apache_mods_enabled is defined and "mpm_itk" in apache_mods_enabled %}
  <IfModule mpm_itk_module>
    AssignUserID {{ item.key }}
    MaxClientsVHost {{ apache_mpm_itk_max_clients_vhost | default('50') }}
  </IfModule>
  {%- endif %}
  {%- if users_cert is defined %}
  SSLEngine on
    {%- if users_cert == "user" %}
  SSLCertificateFile            {{ le_dir }}/{{ item.key }}.{{ inventory_hostname }}.cert.pem
  SSLCertificateKeyFile         {{ le_dir }}/{{ item.key }}.{{ inventory_hostname }}.key.pem
  SSLCertificateChainFile       {{ le_dir }}/{{ item.key }}.{{ inventory_hostname }}.ca.pem
    {%- endif %}
    {%- if users_cert == "vhost" %}
  SSLCertificateFile            {{ le_dir }}/{{ vhost_config.users_apache_server_name }}.cert.pem
  SSLCertificateKeyFile         {{ le_dir }}/{{ vhost_config.users_apache_server_name }}.key.pem
  SSLCertificateChainFile       {{ le_dir }}/{{ vhost_config.users_apache_server_name }}.ca.pem
    {%- endif %}
  {%- endif %}
  {%- if item.value.users_email is defined and item.value.users_email != "" %}
  ServerAdmin "{{ item.value.users_email }}"
  {%- endif %}
  {%- if vhost_config.users_apache_robots is defined and vhost_config.users_apache_robots == "deny" %}
  IncludeOptional /etc/apache2/conf-available/robots-deny.conf
  {%- endif %}
  {%- if vhost_config.users_apache_htauth_locations is defined -%}
    {%- for loc in vhost_config.users_apache_htauth_locations %}
  <Location "{% if loc.location is defined %}{{ loc.location }}{% else %}/{% endif %}" > 
      {%- if loc.type is defined and loc.type == "None" %}
    # No AuthUserFile for this Location
      {%- else %}
    AuthUserFile "{{ item.value.users_home | default(users_basedir + '/' + item.key) }}/.htpasswd/{{ vhost_config.users_apache_server_name }}"
      {%- endif %}
    AuthName "{% if loc.name is defined %}{{ loc.name }}{% else %}Authorised Users{% endif %}"
    AuthType {% if loc.type is defined %}{{ loc.type }}{% else %}Basic{% endif %}
      {%- if loc.require is defined %}{% for req in loc.require %}
    Require {{ req }}
      {%- endfor %}{% else %}     
    Require valid-user
      {%- endif %}
      {%- if loc.redirect is defined %}
    Redirect {%- if loc.redirect_code is defined %}{{ loc.redirect_code }} {% else %}temp {% endif %}{{ loc.redirect }}
      {%- endif %}    
  </Location>
    {%- endfor %}
    {%- if "webarch" in apache_conf_enabled %}
  <Location "/wsh">
    AuthType None
    Require all granted
  </Location>
    {%- elif "mc3" in apache_conf_enabled %}
  <Location "/mc3">
    AuthType None
    Require all granted
  </Location>
    {%- endif %}
  <Location "/.well-known/acme-challenge">
    AuthType None
    Require all granted
  </Location>
  {%- endif %}
  DocumentRoot "{{ item.value.users_home | default(users_basedir + '/' + item.key) }}/{{ users_sites_dir }}/{{ vhost }}"
  <Directory "{{ item.value.users_home | default(users_basedir + '/' + item.key) }}/{{ users_sites_dir }}/{{ vhost }}">
  {%- if vhost_config.users_apache_options is defined %}
    Options{% for option in vhost_config.users_apache_options %} {{ option }}{% endfor %}
  {%- elif users_apache_options is defined %}
    Options {% for option in users_apache_options %} {{ option }}{% endfor %}
  {%- elif vhost_config.users_apache_type is defined and vhost_config.users_apache_type == "php" %}
    Options -Indexes +SymlinksIfOwnerMatch -MultiViews +IncludesNOEXEC -ExecCGI
  {%- elif vhost_config.users_apache_type is defined and vhost_config.users_apache_type == "cgi" %}
    Options -Indexes +SymlinksIfOwnerMatch -MultiViews +IncludesNOEXEC +ExecCGI
  {%- else %}
    Options -Indexes +SymlinksIfOwnerMatch -MultiViews +IncludesNOEXEC -ExecCGI
  {%- endif %}
  {%- if vhost_config.users_apache_index is defined %}
    DirectoryIndex{% for file in vhost_config.users_apache_index %} {{ file }}{% endfor %} 
  {%- elif users_apache_index is defined %}
    DirectoryIndex{% for file in users_apache_index %} {{ file }}{% endfor %}
  {%- elif vhost_config.users_apache_type is defined and vhost_config.users_apache_type == "php" %}
    DirectoryIndex index.php index.html index.htm index.shtml
  {%- elif vhost_config.users_apache_type is defined and vhost_config.users_apache_type == "cgi" %}
    DirectoryIndex index.cgi index.pl index.html index.htm index.shtml
  {%- else %}
    DirectoryIndex index.html index.htm index.shtml
  {%- endif %}
  {%- if vhost_config.users_apache_override is defined %}
    AllowOverride{% for option in vhost_config.users_apache_override %} {{ option }}{% endfor %}
  {%- elif users_apache_override is defined %}
    AllowOverride{% for option in users_apache_override %} {{ option }}{% endfor %}
  {%- elif vhost_config.users_apache_type is defined and vhost_config.users_apache_type == "php" %}
    AllowOverride AuthConfig FileInfo Indexes Limit Options=Indexes,SymLinksIfOwnerMatch,MultiViews,IncludesNOEXEC Nonfatal=Override
  {%- elif vhost_config.users_apache_type is defined and vhost_config.users_apache_type == "cgi" %}
    AllowOverride AuthConfig FileInfo Indexes Limit Options=ExecCGI,SymLinksIfOwnerMatch,MultiViews,IncludesNOEXEC Nonfatal=Override
  {%- else %}
    AllowOverride AuthConfig FileInfo Indexes Limit Options=Indexes,SymLinksIfOwnerMatch,MultiViews,IncludesNOEXEC Nonfatal=Override
  {%- endif %}
  {%- if vhost_config.users_apache_type is defined and vhost_config.users_apache_type == "php" %}
    {#- https://wiki.apache.org/httpd/PHP-FPM#Proxy_via_handler #}
    <IfModule proxy_fcgi_module>
      <IfModule setenvif_module>
        SetEnvIfNoCase ^Authorization$ "(.+)" HTTP_AUTHORIZATION=$1
      </IfModule>
      <FilesMatch "\.php$">
        <If "-f %{REQUEST_FILENAME}">
    {%- if "chroot" in item.value.users_groups %}
          SetHandler "proxy:unix:{{ chroot_users_dir | default('/users') }}/{{ item.key }}{{ item.value.users_home | default(users_basedir + '/' + item.key) }}/php-fpm.sock|fcgi://localhost"
    {%- else %}
          SetHandler "proxy:unix:/run/php/php{{ users_phpfpm_version }}-fpm.sock|fcgi://localhost"
    {%- endif %}
        </If>
      </FilesMatch>
    </IfModule>
  {%- elif vhost_config.users_apache_type is defined and vhost_config.users_apache_type == "cgi" %}
    <IfModule fcgid_module>
      <IfModule mime_module>
        <FilesMatch "[^.]+\.cgi$">
          SetHandler fcgid-script
        </FilesMatch>
        <FilesMatch "[^.]+\.pl$">
          SetHandler fcgid-script
        </FilesMatch>
      </IfModule>
    </IfModule>
  {%- endif %}
    Require all granted
  {%- if vhost_config.users_apache_expires is defined and vhost_config.users_apache_expires == "medium" %}
    IncludeOptional "/etc/apache2/conf-available/expires-medium.conf"
  {%- elif vhost_config.users_apache_expires is defined and vhost_config.users_apache_expires == "strict" %}
    IncludeOptional "/etc/apache2/conf-available/expires-strict.conf"
  {%- endif %}
  </Directory>
  {%- if vhost_config.users_apache_type is defined and vhost_config.users_apache_type == "php" and vhost_config.users_apache_nophp_dirs is defined %}
    {%- for dir in vhost_config.users_apache_nophp_dirs %}
  # No PHP allowed in this directory
  <Directory "{{ item.value.users_home | default(users_basedir + '/' + item.key) }}/{{ users_sites_dir }}/{{ vhost }}/{{ dir }}">
    <FilesMatch "\.php$">
      <If "-f %{REQUEST_FILENAME}">
        Require all denied
      </If>
    </FilesMatch>
  </Directory>
    {%- endfor %}
  {%- endif %}
  CustomLog /var/log/apache2/{{ item.key }}_access.log bandwidth
  LogLevel error
  ErrorLog  {{ item.value.users_home | default(users_basedir + '/' + item.key) }}/logs/apache.error.log
  CustomLog {{ item.value.users_home | default(users_basedir + '/' + item.key) }}/logs/apache.access.log combinedio
</VirtualHost>
{%- endfor %}

# vim: set ft=apache:
