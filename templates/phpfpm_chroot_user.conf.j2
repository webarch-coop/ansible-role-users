[{{ item.key }}]
;prefix = {{ chroot_users_dir | default('/chroot-users') }}/{{ item.key }}
user = {{ item.key }} 
group = {{ item.key }}
chroot = {{ chroot_users_dir | default('/chroot-users') }}/{{ item.key }}
;listen = {{ chroot_users_dir | default('/chroot-users') }}/{{ item.key }}{{ item.value.users_home | default('/home/' + item.key) }}/php-fpm.sock
listen = /{{ item.value.users_home | default('/home/' + item.key) }}/php-fpm.sock
listen.owner = root
listen.group = {{ item.key }}
listen.mode = 0640
;listen.acl_users =
;listen.acl_groups =
listen.allowed_clients = 127.0.0.1

chdir = {{ item.value.users_home | default('/home/' + item.key) }}

pm = ondemand
pm.max_children = {{ users_phpfpm_max_children | default('2') }}
pm.process_idle_timeout = 10s;
pm.max_requests = 1000
;pm.status_path = /status
;ping.path = /ping

access.log = {{ chroot_users_dir | default('/chroot-users') }}/{{ item.key }}{{ item.value.users_home | default('/home/' + item.key) }}/logs/php-fpm.access.log
access.format = "%R - %u %t \"%m %r%Q%q\" %s %f %{mili}d %{kilo}M %C%%"
slowlog = {{ chroot_users_dir | default('/chroot-users') }}/{{ item.key }}/{{ item.value.users_home | default('/home/' + item.key) }}/logs/php-fpm.slow.log
request_slowlog_timeout = 30
request_terminate_timeout = 60 

env[TMP] = {{ item.value.users_home | default('/home/' + item.key) }}/tmp
env[TMPDIR] = {{ item.value.users_home | default('/home/' + item.key) }}/tmp
env[TEMP] = {{ item.value.users_home | default('/home/' + item.key) }}/tmp

; Redirect worker stdout and stderr into main error log. If not set, stdout and
; stderr will be redirected to /dev/null according to FastCGI specs.
; Note: on highloaded environement, this can cause some delay in the page
; process time (several ms).
; Default Value: no
;catch_workers_output = yes

; Decorate worker output with prefix and suffix containing information about
; the child that writes to the log and if stdout or stderr is used as well as
; log level and time. This options is used only if catch_workers_output is yes.
; Settings to "no" will output data as written to the stdout or stderr.
; Default value: yes
;decorate_workers_output = no

; Clear environment in FPM workers
; Prevents arbitrary environment variables from reaching FPM worker processes
; by clearing the environment in workers before env vars specified in this
; pool configuration are added.
; Setting to "no" will make all environment variables available to PHP code
; via getenv(), $_ENV and $_SERVER.
; Default Value: yes
;clear_env = no

; Limits the extensions of the main script FPM will allow to parse. This can
; prevent configuration mistakes on the web server side. You should only limit
; FPM to .php extensions to prevent malicious users to use other extensions to
; execute php code.
; Note: set an empty value to allow all extensions.
; Default Value: .php
;security.limit_extensions = .php .php3 .php4 .php5 .php7

; Pass environment variables like LD_LIBRARY_PATH. All $VARIABLEs are taken from
; the current environment.
; Default Value: clean env
;env[HOSTNAME] = $HOSTNAME
;env[PATH] = /usr/local/bin:/usr/bin:/bin

; Additional php.ini defines, specific to this pool of workers. These settings
; overwrite the values previously defined in the php.ini. The directives are the
; same as the PHP SAPI:
;   php_value/php_flag             - you can set classic ini defines which can
;                                    be overwritten from PHP call 'ini_set'.
;   php_admin_value/php_admin_flag - these directives won't be overwritten by
;                                     PHP call 'ini_set'
; For php_*flag, valid values are on, off, 1, 0, true, false, yes or no.

; Defining 'extension' will load the corresponding shared extension from
; extension_dir. Defining 'disable_functions' or 'disable_classes' will not
; overwrite previously defined php.ini values, but will append the new value
; instead.

; Note: path INI options can be relative and will be expanded with the prefix
; (pool, global or /usr)

; Default Value: nothing is defined by default except the values in php.ini and
;                specified at startup with the -d argument
;php_admin_value[sendmail_path] = /usr/sbin/sendmail -t -i -f www@my.domain.com
;php_flag[display_errors] = off
;php_admin_value[error_log] = /var/log/fpm-php.www.log
;php_admin_flag[log_errors] = on
;php_admin_value[memory_limit] = 32M
