# Copyright 2018-2025 Chris Croome
#
# This file is part of the Webarchitects Users Ansible role.
#
# The Webarchitects Users Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects Users Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects Users Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Apache chroot tasks
  block:

    # /var/www/users
    - name: "Users PHP FPM chrooted directory for mounting {{ users_basedir }} at {{ users_apache_chroot_users_basedir }} present"
      ansible.builtin.file:
        path: "{{ users_apache_chroot_users_basedir }}"
        state: directory
        mode: "0755"
        owner: root
        group: root

    # /chroot/var/www/users
    - name: "Directory for users home directories to be mounted under present in the chroot, {{ users_chroot_dir }}{{ users_apache_chroot_users_basedir }}"
      ansible.builtin.file:
        path: "{{ users_chroot_dir }}{{ users_apache_chroot_users_basedir }}"
        state: directory
        mode: "0755"
        owner: root
        group: root

    # /chroot/run/php
    - name: "Directory for PHP sockets present in the chroot, {{ users_chroot_dir }}/run/php"
      ansible.builtin.file:
        path: "{{ users_chroot_dir }}/run/php"
        state: directory
        mode: "0755"
        owner: www-data
        group: www-data

    - name: Apache mod_md configuration
      block:

        # /chroot/etc/apache2/md
        - name: "Mount point {{ users_chroot_dir }}/etc/apache/md present"
          ansible.builtin.file:
            path: "{{ users_chroot_dir }}/etc/apache2/md"
            state: directory
            mode: "0755"
            owner: root
            group: root

      when: ( "md" in users_apache_modules_loaded )

    - name: Apache suEXEC configuration
      block:

        # /chroot/etc/apache2/suexec
        - name: "Mount point {{ users_chroot_dir }}/etc/apache2/suexec present"
          ansible.builtin.file:
            path: "{{ users_chroot_dir }}/etc/apache2/suexec"
            state: directory
            mode: "0750"
            owner: root
            group: root

        - name: Symlink for /etc/alternatives/suexec present in the chroot
          ansible.builtin.file:
            src: /usr/lib/apache2/suexec-custom
            dest: "{{ users_chroot_dir }}/etc/alternatives/suexec"
            state: link
            force: true
            follow: false
            mode: "0777"
            owner: root
            group: root

        - name: Apache www-data user suexec configuration in place
          ansible.builtin.template:
            src: www-data.j2
            dest: /etc/apache2/suexec/www-data
            mode: "0640"
            owner: root
            group: root

      when: ( users_apache_chroot_suexec ) and ( "suexec" in users_apache_modules_loaded )

    - name: Check if Apache chroot is mounted and if it isn't ensure that the mount point for it exists
      block:

        # /chroots/www-data
        - name: "Check if {{ users_apache_chroot_dir }} is mounted"
          ansible.builtin.command: "findmnt {{ users_apache_chroot_dir }}"
          check_mode: false
          changed_when: false
          register: users_findmnt
          failed_when: users_findmnt.rc is not regex('^0|1$')

        # /chroots/www-data
        - name: "Directory for Apache chroot to be mounted on present at {{ users_apache_chroot_dir }}"
          ansible.builtin.file:
            path: "{{ users_apache_chroot_dir }}"
            state: directory
            mode: "0750"
            owner: root
            group: root
          when: users_findmnt.rc == 1

    - name: Apache chroot mounts present in /etc/fstab
      ansible.builtin.blockinfile:
        path: /etc/fstab
        block: |
          # Apache chroot
          {{ users_chroot_dir }} {{ users_apache_chroot_dir }} ext4 ro,nosuid,bind,private 0 0
          {% if "md" in users_apache_modules_loaded %}
          # mod_md needs rw access to /etc/apache2/md
          /etc/apache2/md {{ users_apache_chroot_dir }}/etc/apache2/md ext4 rw,nodev,nosuid,bind,private 0 0
          {% endif %}
          {% if users_apache_chroot_suexec and "suexec" in users_apache_modules_loaded %}
          # suEXEC with suid mounted in the Apache chroot
          /usr/lib/apache2 {{ users_apache_chroot_dir }}/usr/lib/apache2 ext4 ro,bind,private 0 0
          # Logs dir for suEXEC mounted in the Apache chroot
          /var/log/apache2 {{ users_apache_chroot_dir }}/var/log/apache2 ext4 rw,nodev,nosuid,bind,private 0 0
          # Apache suEXEC config mounted in the Apache chroot
          /etc/apache2/suexec {{ users_apache_chroot_dir }}/etc/apache2/suexec ext4 ro,nodev,nosuid,bind,private 0 0
          {% endif %}
          {% if "fcgid" in users_apache_modules_loaded %}
          # FastCGI socket directory for CGI mounted in the Apache chroot
          /var/lib/apache2/fcgid/sock {{ users_apache_chroot_dir }}/var/lib/apache2/fcgid/sock ext4 rw,nodev,nosuid,bind,private 0 0
          {% endif %}
          {% if users_apache_chroot_mount_dirs is defined and users_apache_chroot_mount_dirs != [] %}
          # Readonly system DocumentRoot directories mounted in the Apache chroot
          {% for dir in users_apache_chroot_mount_dirs %}
          /var/www/{{ dir }} {{ users_apache_chroot_dir }}/var/www/{{ dir }} ext4 ro,nodev,nosuid,bind,private 0 0
          {% endfor %}
          {% endif %}
          # Readonly transient state files mounted in the Apache chroot (are all of these needed?)
          /run/apache2 {{ users_apache_chroot_dir }}/run/apache2 ext4 ro,nodev,nosuid,noexec,bind,private 0 0
          /run/chroot {{ users_apache_chroot_dir }}/run/chroot ext4 ro,nodev,nosuid,noexec,bind,private 0 0
          /run/mysqld {{ users_apache_chroot_dir }}/run/mysqld ext4 ro,nodev,nosuid,noexec,bind,private 0 0
          /run/php {{ users_apache_chroot_dir }}/run/php ext4 ro,nodev,nosuid,noexec,bind,private 0 0
        marker: "# {mark} APACHE CHROOT"
        insertafter: '^\/dev\/'
      register: users_apache_fstab_chroot

    # NOTE This might require a reboot rather than a daemon-reload
    - name: Systemd daemon-reload  # noqa: no-handler
      ansible.builtin.systemd_service:
        daemon_reload: true
      when: users_apache_fstab_chroot.changed | bool

    - name: Debug first set of chroot directories to be mounted for Apache
      ansible.builtin.debug:
        msg:
          - "src: {{ mnt.src }}"
          - "path: {{ mnt.path }}"
          - "opts: {{ mnt.opts }}"
          - "fstype: ext4"
          - "state: {{ mnt.state }}"
        verbosity: 2
      loop:
        - src: "{{ users_chroot_dir }}"
          path: "{{ users_apache_chroot_dir }}"
          opts: ro,nosuid,bind,private
          state: mounted
        - src: /etc/apache2/md
          path: "{{ users_apache_chroot_dir }}/etc/apache2/md"
          opts: rw,nodev,nosuid,bind,private
          state: "{% if 'md' in users_apache_modules_loaded %}mounted{% else %}absent{% endif %}"
        - src: /usr/lib/apache2
          path: "{{ users_apache_chroot_dir }}/usr/lib/apache2"
          opts: ro,bind,private
          state: "{% if users_apache_chroot_suexec and 'suexec' in users_apache_modules_loaded %}mounted{% else %}absent{% endif %}"
        - src: /var/log/apache2
          path: "{{ users_apache_chroot_dir }}/var/log/apache2"
          opts: rw,nodev,nosuid,bind,private
          state: "{% if users_apache_chroot_suexec and 'suexec' in users_apache_modules_loaded %}mounted{% else %}absent{% endif %}"
        - src: /etc/apache2/suexec
          path: "{{ users_apache_chroot_dir }}/etc/apache2/suexec"
          opts: ro,nodev,nosuid,bind,private
          state: "{% if users_apache_chroot_suexec and 'suexec' in users_apache_modules_loaded %}mounted{% else %}absent{% endif %}"
        - src: /var/lib/apache2/fcgid/sock
          path: "{{ users_apache_chroot_dir }}/var/lib/apache2/fcgid/sock"
          opts: rw,nodev,nosuid,bind,private
          state: "{% if 'fcgid' in users_apache_modules_loaded %}mounted{% else %}absent{% endif %}"
        - src: "/run/apache2"
          path: "{{ users_apache_chroot_dir }}/run/apache2"
          opts: ro,nodev,nosuid,noexec,bind,private
          state: mounted
        - src: "/run/chroot"
          path: "{{ users_apache_chroot_dir }}/run/chroot"
          opts: ro,nodev,nosuid,noexec,bind,private
          state: mounted
        - src: "/run/mysqld"
          path: "{{ users_apache_chroot_dir }}/run/mysqld"
          opts: ro,nodev,nosuid,noexec,bind,private
          state: mounted
        - src: "/run/php"
          path: "{{ users_apache_chroot_dir }}/run/php"
          opts: ro,nodev,nosuid,noexec,bind,private
          state: mounted
      loop_control:
        loop_var: mnt
        label: "{{ mnt.path | basename }}"

    - name: Debug second set of chroot directories to be mounted for Apache
      ansible.builtin.debug:
        msg:
          - "src: /var/www/{{ dir }}"
          - "path: {{ users_apache_chroot_dir }}/var/www/{{ dir }}"
          - "opts: ro,nodev,nosuid,bind,private"
          - "fstype: ext4"
          - "state: mounted"
        verbosity: 2
      loop: "{{ users_apache_chroot_mount_dirs }}"
      loop_control:
        loop_var: dir
        label: "{{ dir }}"
      when: ( users_apache_chroot_mount_dirs is defined ) and ( users_apache_chroot_mount_dirs != [] )

    - name: First set of chroot directories mounted for Apache
      ansible.builtin.include_tasks: mount.yml
      vars:
        users_mount_src: "{{ mnt.src }}"
        users_mount_path: "{{ mnt.path }}"
        users_mount_opts: "{{ mnt.opts }}"
        users_mount_state: "{{ mnt.state }}"
        users_mount_fstype: ext4
      loop:
        - src: "{{ users_chroot_dir }}"
          path: "{{ users_apache_chroot_dir }}"
          opts: ro,nosuid,bind,private
          state: mounted
        - src: /etc/apache2/md
          path: "{{ users_apache_chroot_dir }}/etc/apache2/md"
          opts: rw,nodev,nosuid,bind,private
          state: "{% if 'md' in users_apache_modules_loaded %}mounted{% else %}absent{% endif %}"
        - src: /usr/lib/apache2
          path: "{{ users_apache_chroot_dir }}/usr/lib/apache2"
          opts: ro,bind,private
          state: "{% if users_apache_chroot_suexec and 'suexec' in users_apache_modules_loaded %}mounted{% else %}absent{% endif %}"
        - src: /var/lib/apache2/fcgid/sock
          path: "{{ users_apache_chroot_dir }}/var/lib/apache2/fcgid/sock"
          opts: rw,nodev,nosuid,bind,private
          state: "{% if 'fcgid' in users_apache_modules_loaded %}mounted{% else %}absent{% endif %}"
        - src: "/run/apache2"
          path: "{{ users_apache_chroot_dir }}/run/apache2"
          opts: ro,nodev,nosuid,noexec,bind,private
          state: mounted
        - src: "/run/chroot"
          path: "{{ users_apache_chroot_dir }}/run/chroot"
          opts: ro,nodev,nosuid,noexec,bind,private
          state: mounted
        - src: "/run/mysqld"
          path: "{{ users_apache_chroot_dir }}/run/mysqld"
          opts: ro,nodev,nosuid,noexec,bind,private
          state: mounted
        - src: "/run/php"
          path: "{{ users_apache_chroot_dir }}/run/php"
          opts: ro,nodev,nosuid,noexec,bind,private
          state: mounted
      loop_control:
        loop_var: mnt
        label: "{{ mnt.path | basename }}"

    - name: Sub-directories of /var/www configured in the Apache chroot
      block:

        - name: Sub-directories of /var/www present in the chroot
          ansible.builtin.file:
            path: "{{ users_chroot_dir }}/var/www/{{ dir }}"
            state: directory
            mode: "0755"
          loop: "{{ users_apache_chroot_mount_dirs }}"
          loop_control:
            loop_var: dir

        - name: Debug chroot /var/www directories to be mounted for Apache
          ansible.builtin.debug:
            msg:
              - "src: /var/www/{{ dir }}"
              - "path: {{ users_apache_chroot_dir }}/var/www/{{ dir }}"
              - "opts: ro,nodev,nosuid,bind,private"
              - "fstype: ext4"
              - "state: mounted"
            verbosity: 2
          loop: "{{ users_apache_chroot_mount_dirs }}"
          loop_control:
            loop_var: dir

        - name: Chroot /var/www directories mounted for Apache
          ansible.builtin.include_tasks: mount.yml
          vars:
            users_mount_src: "/var/www/{{ dir }}"
            users_mount_path: "{{ users_apache_chroot_dir }}/var/www/{{ dir }}"
            users_mount_opts: ro,nodev,nosuid,bind,private
            users_mount_fstype: ext4
            users_mount_state: mounted
          loop: "{{ users_apache_chroot_mount_dirs }}"
          loop_control:
            loop_var: dir
            label: "{{ dir }}"

      when: ( users_apache_chroot_mount_dirs is defined ) and ( users_apache_chroot_mount_dirs != [] )

  tags:
    - user
...
