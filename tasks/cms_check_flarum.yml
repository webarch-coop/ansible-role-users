# Copyright 2018-2025 Chris Croome
#
# This file is part of the Webarchitects Users Ansible role.
#
# The Webarchitects Users Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects Users Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects Users Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: "Check Flarum variables for {{ user.key }}"
  block:

    - name: "Check that required Flarum variables are defined for {{ vhost.key }} VirtualHost for {{ user.key }}"
      ansible.builtin.assert:
        that:
          - vhost.value.users_apache_type is regex('^php')
          - vhost.key | basename == "public"
          - vhost.value.flarum_version is defined
          - ( vhost.value.flarum_dbname is defined ) and ( vhost.value.flarum_dbname in user.value.users_mariadb_databases )
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"

    - name: "Check that {{ user.key }} is in the phpfpm group if it is present"
      ansible.builtin.assert:
        that:
          - ( "phpfpm" in user.value.users_groups )
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"
      when: ( "phpfpm" in ansible_facts.getent_group )

    - name: "Check the flarum_url for {{ vhost.key }} VirtualHost for {{ user.key }}"
      block:

        - name: "Check that the flarum_url doesn't end in a slash for {{ vhost.key }} VirtualHost for {{ user.key }}"
          ansible.builtin.assert:
            that:
              - vhost.value.flarum_url is not regex("/$")
            quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"

        - name: Set a fact for the flarum_url without a protcol
          ansible.builtin.set_fact:
            flarum_url_domain: "{{ vhost.value.flarum_url | regex_replace('^https://') }}"

        - name: "Check that flarum_url domain equals the ServerName for {{ vhost.key }} VirtualHost for {{ user.key }}"
          ansible.builtin.assert:
            that:
              - ( flarum_url_domain == vhost.key )
            quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"
          when: ( vhost.value.users_apache_server_aliases is not defined )

        - name: "Check that flarum_url domain contains either the ServerName or a ServerAlias for {{ vhost.key }} VirtualHost for {{ user.key }}"
          ansible.builtin.assert:
            that:
              - ( flarum_url_domain == vhost.key ) or ( flarum_url_domain in vhost.value.users_apache_server_aliases )
            quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"
          when: ( vhost.value.users_apache_server_aliases is defined ) and ( vhost.value.users_apache_server_aliases[0] is defined )

      when: vhost.value.flarum_url is defined

    - name: "Check the flarum_title is not empty if it is defined for {{ vhost.key }} VirtualHost for {{ user.key }}"
      ansible.builtin.assert:
        that:
          - vhost.value.flarum_title | length > 0
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"
      when: vhost.value.flarum_title is defined

    - name: "Check the flarum_description is not empty if it is defined for {{ vhost.key }} VirtualHost for {{ user.key }}"
      ansible.builtin.assert:
        that:
          - vhost.value.flarum_description | length > 0
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"
      when: vhost.value.flarum_description is defined

    - name: "Check the flarum_welcome_title is not empty if it is defined for {{ vhost.key }} VirtualHost for {{ user.key }}"
      ansible.builtin.assert:
        that:
          - vhost.value.flarum_welcome_title | length > 0
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"
      when: vhost.value.flarum_welcome_title is defined

    - name: "Check the flarum_welcome_message is not empty if it is defined for {{ vhost.key }} VirtualHost for {{ user.key }}"
      ansible.builtin.assert:
        that:
          - vhost.value.flarum_welcome_message | length > 0
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"
      when: vhost.value.flarum_welcome_message is defined

    # https://flarum.org/docs/extend/i18n.html
    - name: "Check that the flarum_locale look likes an allowed language for {{ vhost.key }} VirtualHost for {{ user.key }}"
      ansible.builtin.assert:
        that:
          - vhost.value.flarum_locale is regex("^^[a-z]{2,3}[_]{0.1}[A-Z]{0,2}$")
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"
      when: vhost.value.flarum_locale is defined

    - name: "Check that the flarum_dbuser is {{ user.key }} is defined for {{ vhost.key }} VirtualHost"
      ansible.builtin.assert:
        that:
          - vhost.value.flarum_dbuser == user.key
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"
      when: vhost.value.flarum_dbuser is defined

    - name: "Check that the flarum_dbprefix is less than 6 numbers or letters or underscores for {{ vhost.key }} VirtualHost for {{ user.key }}"
      ansible.builtin.assert:
        that:
          - vhost.value.flarum_dbprefix | length > 0
          - vhost.value.flarum_dbprefix is regex("^[a-zA-Z0-9_]*$")
          - vhost.value.flarum_dbprefix is regex("^.{1,6}$")
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"
      when: vhost.value.flarum_dbprefix is defined

    - name: "Check that the flarum_admin_user contains only ascii letters and numbers and is between 2 and 17 characters long for {{ vhost.key }} VirtualHost for {{ user.key }}"
      ansible.builtin.assert:
        that:
          - vhost.value.flarum_admin_user | length > 0
          - vhost.value.flarum_admin_user is regex("^[a-zA-Z0-9]*$")
          - vhost.value.flarum_admin_user is regex("^.{2,17}$")
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"
      when: vhost.value.flarum_admin_user is defined

    - name: "Check that the flarum_admin_email is a email address for {{ vhost.key }} VirtualHost for {{ user.key }}"
      ansible.builtin.assert:
        that:
          - vhost.value.flarum_admin_email is regex("^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$")
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"
      when: vhost.value.flarum_admin_email is defined

    - name: "Check that flarum_autoupdate is true or false if it is defined for {{ vhost.key }} VirtualHost for {{ user.key }}"
      ansible.builtin.assert:
        that:
          - ( vhost.value.flarum_autoupdate | bool ) or ( not vhost.value.flarum_autoupdate | bool )
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"
      when: vhost.value.flarum_autoupdate is defined

    - name: "Check that flarum_notify is true or false if it is defined for {{ vhost.key }} VirtualHost for {{ user.key }}"
      ansible.builtin.assert:
        that:
          - ( vhost.value.flarum_notify | bool ) or ( not vhost.value.flarum_notify | bool )
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"
      when: vhost.value.flarum_notify is defined

    - name: "Check that flarum_mail_from is a email address for {{ vhost.key }} VirtualHost for {{ user.key }}"
      ansible.builtin.assert:
        that:
          - vhost.value.flarum_mail_from is regex("^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$")
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"
      when: vhost.value.flarum_mail_from is defined

  tags:
    - users
...
