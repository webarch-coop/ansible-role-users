---
# One cert per VirtualHost
- name: Let's Encrypt cert role included
  include_role:
    name: acmesh
    tasks_from: letsencrypt
  vars:
    common_name: "{{ vhost.value.users_apache_server_name }}"
    subject_alt_names: "{{ vhost.value.users_apache_server_aliases }}"
    reloadcmd: "service apache2 reload"
  loop: "{{ item.value.users_apache_virtual_hosts | dict2items }}"
  loop_control:
    loop_var: vhost
  when: users_cert == "vhost"
  tags:
    - apache

# One cert per user
- block:

    - name: "Set {{ item.key }}.{{ inventory_hostname }} for commonName and ensure subjectAltNames is an empty array"
      set_fact:
        common_name: "{{ item.key }}.{{ inventory_hostname }}"
        subject_alt_names: []
        reloadcmd: "service apache2 reload"
      tags:
        - apache

    - name: Set fact for subjectAltNames
      set_fact:
        subject_alt_names: "{% set subject_alt_names = subject_alt_names + [ vhost.value.users_apache_server_name ] + vhost.value.users_apache_server_aliases|default([]) %}{{ subject_alt_names | list }}"
      loop: "{{ item.value.users_apache_virtual_hosts | dict2items }}"
      loop_control:
        loop_var: vhost
      tags:
        - apache

    - debug:
        msg: "subject_alt_names is set to: {{ subject_alt_names }}"
        verbosity: 1

    - debug:
        msg: "common_name is set to: {{ common_name }}"
        verbosity: 1

    - name: Let's Encrypt cert role included
      include_role:
        name: acmesh
        tasks_from: letsencrypt
      tags:
        - apache

  when: users_cert == 'user'

- name: "Apache {{ item.key }} sites-available file present"
  template:
    src: templates/apache.conf.j2
    dest: "/etc/apache2/sites-available/{{ item.key }}.conf"
  tags:
    - apache

- name: "Apache {{ item.key }}/sites directory present"
  file:
    path: "{{ item.value.users_home | default('/home/' + item.key) }}/sites"
    state: directory
    owner: "{{ item.key }}"
    # group: "{{ apache_user | default('www-data') }}"
    group: "{{ item.value.users_group | default(item.key) }}"
    mode: 0750
  tags:
    - apache

- name: "Apache DocumentRoot present"
  file:
    path: "{{ item.value.users_home | default('/home/' + item.key) }}/sites/{{ vhost }}"
    state: directory
    owner: "{{ item.key }}"
    # group: "{{ apache_user | default('www-data') }}"
    group: "{{ item.value.users_group | default(item.key) }}"
    mode: 0750
  loop: "{{ item.value.users_apache_virtual_hosts.keys() | list }}"
  loop_control:
    loop_var: vhost
  tags:
    - apache

- name: "Apache log directory {{ item.value.users_home | default('/home/' + item.key) }}/logs present"
  file:
    path: "{{ item.value.users_home | default('/home/' + item.key) }}/logs"
    state: directory
    owner: root
    group: "{{ item.key }}"
    mode: 0750
  tags:
    - apache

- name: "Apache {{ item.key }} sites-enabled symlink present"
  command: "a2ensite {{ item.key }}"
  register: users_a2ensite
  changed_when: '"already enabled" not in users_a2ensite.stdout'
  tags:
    - apache

- name: "MariaDB password read from {{ item.value.users_home | default('/home/' + item.key) }}/.my.cnf"
  shell: "my_print_defaults --defaults-file='{{ item.value.users_home | default('/home/' + item.key) }}/.my.cnf' client | grep '^--password' | sed -e 's/--password=//'"
  register: users_mariadb_password_read
  changed_when: false

# Add sites to matomo
- name: addsite.yml tasks from Matomo role included for each vhost
  include_role:
    name: matomo
    tasks_from: addsite.yml
  vars:
    matomo_site_name: "{{ vhost.key }}"
    matomo_site_urls: "{{ vhost.value.users_apache_server_name }}{% for a in vhost.value.users_apache_server_aliases }},{{ a}}{% endfor %}"
  loop: "{{ item.value.users_apache_virtual_hosts | dict2items }}"
  loop_control:
    loop_var: vhost
  tags:
    - matomo

- name: Include WordPress role
  include_role:
    name: wordpress
  vars:
    wordpress_user: "{{ item.key }}"
    wordpress_group: "{{ item.key }}"
    wordpress_docroot: "{{ item.value.users_home | default('/home/' + item.key) }}/sites/{{ vhost.key }}"
    wordpress_docroot_mode: "0750"
    wordpress_dbname: "{% if vhost.value.wordpress_dbname is defined %}{{ vhost.value.wordpress_dbname }}{% else %}{{ item.value.users_mariadb_databases[0] }}{% endif %}"
    wordpress_dbuser: "{{ item.key }}"
    wordpress_dbpass: "{{ users_mariadb_password_read.stdout | trim | quote }}"
    wordpress_dbprefix: "{{ vhost.value.wordpress_dbprefix | default('wp_') }}"
    wordpress_locale: "{{ vhost.value.wordpress_dbprefix | default('en_GB') }}"
    wordpress_url: "{{ vhost.value.wordpress_url | default(vhost.value.users_apache_server_name) }}"
    wordpress_title: "{{ vhost.value.wordpress_title | default(vhost.value.users_apache_server_name) }}"
    wordpress_admin_user: "{{ vhost.value.wordpress_admin_user | default(vhost.key) }}"
    wordpress_admin_email: "{{ vhost.value.wordpress_admin_email | default(item.value.users_email) }}"
    wordpress_notify_from: "{{ users_notify_from | default('Webarchitects') }} <root@{{ ansible_fqdn }}>"
    wordpress_notify_subject_tag: "{{ users_notify_subject_tag | default('webarchitects') }}"
    wordpress_notify_signature: "{{ users_notify_signature }}"
  loop: "{{ item.value.users_apache_virtual_hosts | dict2items }}"
  loop_control:
    loop_var: vhost
  when: ( vhost.value.users_cms is defined ) and ( vhost.value.users_cms == "wordpress" )

- name: Include Matomo role
  include_role:
    name: matomo
  vars:
    matomo_user: "{{ item.key }}"
    matomo_home: "{{ item.value.users_home | default('/home/' + item.key) }}"
    matomo_html: "{{ item.value.users_home | default('/home/' + item.key) }}/sites/{{ vhost.key }}"
    matomo_private: "{{ item.value.users_home | default('/home/' + item.key) }}/private"
    matomo_db_username: "{{ item.key }}"
    matomo_db_pass: "{{ users_mariadb_password_read.stdout | trim | quote }}"
    matomo_db_host: localhost
    matomo_db_name: "{% if vhost.value.matomo_dbname is defined %}{{ vhost.value.matomo_dbname }}{% else %}{{ item.value.users_mariadb_databases[0] }}{% endif %}"
    matomo_first_site_name: "{{ vhost.value.matomo_first_site_name | default(inventory_hostname) }}"
    matomo_first_site_url: "{{ vhost.value.matomo_first_site_url | default('https://' + inventory_hostname + '/') }}"
    matomo_first_user: "{{ vhost.value.matomo_first_user | default(item.key) }}"
    matomo_first_user_email: "{{ item.value.users_email | default('root@' + inventory_hostname) }}"
    matomo_email_signature: "{{ users_notify_passwd_signature }}"
  loop: "{{ item.value.users_apache_virtual_hosts | dict2items }}"
  loop_control:
    loop_var: vhost
  when: ( vhost.value.users_cms is defined ) and ( vhost.value.users_cms == "matomo" )
