---
- name: Check which shells are present
  shell: cat /etc/shells | grep -v ^#
  check_mode: false
  changed_when: false
  register: users_shells_check

- name: Array set for shells
  set_fact:
    users_shells: "{{ users_shells_check.stdout_lines | list }}"

- name: Print available shells
  debug:
    msg: "Available shells: {{ users_shells }}"
    verbosity: 2

- name: Get all groups
  getent:
    database: group
    split: ':'

- debug:
    var: getent_group
    verbosity: 2

- name: Get all users
  getent:
    database: passwd
    split: ':'

- debug:
    var: getent_passwd
    verbosity: 2

- name: Set a fact for the Debian version
  set_fact:
    users_debian_version: "{{ ansible_distribution_release }}"
  tags:
    - apache
    - letsencrypt
    - logrotate
    - phpfpm
    - users-update
    - users-cron
    - users-mariadb
    - users-scripts
    - users-quota
    - users-fstab
    - wordpress
    - matomo
    - phpmyadmin

- name: Load package information as facts
  package_facts:
    manager: apt
  tags:
    - apache
    - letsencrypt
    - logrotate
    - phpfpm
    - users-update
    - users-cron
    - users-mariadb
    - users-scripts
    - users-quota
    - users-fstab
    - wordpress
    - matomo
    - phpmyadmin

- name: Fail if ansible_facts.packages is not defined or empty
  fail:
    msg: The package_facts array is empty, this could be a result of the Ansible 2.8.x bug https://github.com/ansible/ansible/issues/56921
  when: ( ansible_facts.packages is not defined ) or ( ansible_facts.packages == [] )
  tags:
    - apache
    - letsencrypt
    - logrotate
    - phpfpm
    - users-update
    - users-cron
    - users-mariadb
    - users-scripts
    - users-quota
    - users-fstab
    - wordpress
    - matomo
    - phpmyadmin

- name: PHP FPM checks
  block:

    - name: Check that php-fpm is installed
      assert:
        that:
          - '"php-fpm" in ansible_facts.packages'
      tags:
        - logrotate
        - phpfpm
        - users-update

    - name: Run phpquery -V
      command: phpquery -V
      register: users_phpquery
      check_mode: false
      changed_when: false
      tags:
        - logrotate
        - phpfpm
        - users-update

    - name: Set a fact for the PHP-FPM version
      set_fact:
        users_phpfpm_version: "{{ users_phpquery.stdout | trim }}"
      when: ( users_phpquery is defined ) and ( users_phpquery.stdout != "" )
      tags:
        - logrotate
        - phpfpm
        - users-update

  when: ( users_phpfpm is defined ) and ( users_phpfpm == True )

- name: Check if a chroot exists
  stat:
    path: "{{ chroot_dir | default('/chroot') }}"
  register: users_chroot_dir
  when: ( users_chroot is defined ) and ( users_chroot == True )
  tags:
    - logrotate
    - phpfpm
    - users-update
    - users-chroot
    - users-cron
    - users-fstab
...
