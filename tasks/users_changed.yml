---
# The following will list the user state files that have changed
# however if the tasks were not full completed then just using
# this would result in changes not being applied, so a check of
# the proposed vs the current state files is needed.
#
# - name: Users that need updating
#   ansible.builtin.set_fact:
#     users_check_state: "{{ users_check_state }} + [ '{{ result.user.key }}' ]"
#   when: result.changed
#   loop: "{{ users_state_file.results }}"
#   loop_control:
#     loop_var: result
#     label: "{{ result.user.key }}"

# The users_state_file is generated by a loop at the end of system.yml
- name: Users who have proposed state files changed
  ansible.builtin.debug:
    msg: "User with proposed state file changed: {{ result.user.key }}"
    verbosity: 1
  when: result.changed
  loop: "{{ users_state_file.results }}"
  loop_control:
    loop_var: result
    label: "{{ result.user.key }}"
  tags:
    - users

- name: Check users current state files
  ansible.builtin.include_tasks: user_state.yml
  loop: "{{ users | dict2items }}"
  loop_control:
    loop_var: user
    label: "{{ user.key }}"
  tags:
    - users

- name: Print the users to update
  ansible.builtin.debug:
    msg: "User to update: {{ users_update }}"
    verbosity: 2
...
