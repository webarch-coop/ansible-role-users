---
- name: Chrooted user present
  block:

    - name: "Read {{ user.key }} entry from /etc/passwd"
      command: "grep ^{{ user.key }}: /etc/passwd"
      check_mode: false
      changed_when: false
      register: users_etc_passwd

    - name: "{{ user.key }} present in {{ users_chroot_dir }}/etc/passwd"
      lineinfile:
        path: "{{ users_chroot_dir }}/etc/passwd"
        line: "{{ users_etc_passwd.stdout }}"
        state: present

    - name: "Read {{ user.key }} entry from /etc/group"
      command: "grep ^{{ user.key }}: /etc/group"
      check_mode: false
      changed_when: false
      register: users_etc_group

    - name: "{{ user.key }} present in {{ users_chroot_dir }}/etc/group"
      lineinfile:
        path: "{{ users_chroot_dir }}/etc/group"
        line: "{{ users_etc_group.stdout }}"
        state: present

    # /chroot/home/USER
    - name: "Chroot home directory present for {{ user.key }}"
      file:
        path: "{{ users_chroot_dir }}{{ user.value.users_home | default(users_basedir + '/' + user.key) }}"
        state: directory
        mode: "{{ user.value.users_home_mode | default('0750') }}"
        owner: "{{ user.value.users_home_owner | default(user.key) }}"
        group: "{{ user.value.users_home_group | default(user.key) }}"

    # /chroots/USER
    - name: "Check if the ro chroot is mounted for {{ user.key }}"
      command: "findmnt {{ users_chroot_users_dir }}/{{ user.key }}"
      check_mode: false
      changed_when: false
      register: users_findmnt
      failed_when: users_findmnt.rc is not regex('^0|1$')

    # /chroots/USER
    - name: "Directory {{ users_chroot_users_dir }}/{{ user.key }} present for {{ user.key }}"
      file:
        path: "{{ users_chroot_users_dir }}/{{ user.key }}"
        state: directory
        mode: 0755
        owner: root
        group: root
      when: users_findmnt.rc == 1

    - name: "Chroot directories mounted for {{ user.key }}"
      include_tasks: mount.yml
      vars:
        users_mount_src: "{{ mnt.src }}"
        users_mount_path: "{{ mnt.path }}"
        users_mount_opts: "{{ mnt.opts }}"
        users_mount_fstype: ext4
        users_mount_state: mounted
      loop:
        # mount /chroot at /chroots/USER
        - src: "{{ users_chroot_dir }}"
          path: "{{ users_chroot_users_dir }}/{{ user.key }}"
          opts: ro,nosuid,bind,private
        # mount /home/USER at /chroots/USER/home/USER
        - src: "{{ user.value.users_home | default(users_basedir + '/' + user.key) }}"
          path: "{{ users_chroot_users_dir }}/{{ user.key }}{{ user.value.users_home | default(users_basedir + '/' + user.key) }}"
          opts: rw,nodev,nosuid,bind,private
        # mount /run/mysqld at /chroots/USER/run/mysqld
        - src: /run/mysqld
          path: "{{ users_chroot_users_dir }}/{{ user.key }}/run/mysqld"
          opts: ro,nodev,nosuid,noexec,bind,private
        # mount /run/chroot at /chroots/USER/run/chroot
        - src: "/run/chroot"
          path: "{{ users_chroot_users_dir }}/{{ user.key }}/run/chroot"
          opts: ro,nodev,nosuid,noexec,bind,private
      loop_control:
        loop_var: mnt
        label: "{{ mnt.path }}"

    - name: Additional mounts for user home directory under /var/www both within and outside the chroot when Apache is chrooted
      block:

        # /var/www/users/USER
        - name: "Mount point for users home present in {{ users_apache_chroot_users_basedir }} for Apache chroot"
          file:
            path: "{{ users_apache_chroot_users_basedir }}/{{ user.key }}"
            state: directory
            mode: "{{ user.value.users_home_mode | default('0750') }}"
            owner: "{{ user.value.users_home_owner | default(user.key) }}"
            group: "{{ user.value.users_home_group | default(user.key) }}"

        # /var/www/users/USER
        - name: "Users home mounted rw in {{ users_apache_chroot_users_basedir }} for Apache chroot"
          include_tasks: mount.yml
          vars:
            users_mount_src: "{{ user.value.users_home | default(users_basedir + '/' + user.key) }}"
            users_mount_path: "{{ users_apache_chroot_users_basedir }}/{{ user.key }}"
            users_mount_opts: rw,nodev,nosuid,bind,private
            users_mount_fstype: ext4
            users_mount_state: mounted

        # /chroot/var/www/users/USER
        - name: "Users directory present in the rw chroot under {{ users_apache_chroot_users_basedir }} for Apache chroot"
          file:
            path: "{{ users_chroot_dir }}{{ users_apache_chroot_users_basedir }}/{{ user.key }}"
            state: directory
            mode: "{{ user.value.users_home_mode | default('0750') }}"
            owner: "{{ user.value.users_home_owner | default(user.key) }}"
            group: "{{ user.value.users_home_group | default(user.key) }}"

        # /chroots/www-data/var/www/users/USER
        - name: "Users home mounted rw at {{ users_apache_chroot_dir }}{{ users_apache_chroot_users_basedir }}/{{ user.key }} for Apache chroot"
          include_tasks: mount.yml
          vars:
            users_mount_src: "{{ user.value.users_home | default(users_basedir + '/' + user.key) }}"
            users_mount_path: "{{ users_apache_chroot_dir }}{{ users_apache_chroot_users_basedir }}/{{ user.key }}"
            users_mount_opts: rw,nodev,nosuid,bind,private
            users_mount_fstype: ext4
            users_mount_state: mounted

      when:
        - ( users_apache_chroot is defined ) and ( users_apache_chroot )

  tags:
    - users
...
