---
- name: "Apache user {{ user.key }} absent"
  block:

    - name: "Check if the {{ user.key }} site is enabled"
      ansible.builtin.stat:
        path: "/etc/apache2/sites-enabled/{{ user.key }}.conf"
      register: users_apache_site_enabled

    - name: "Apache {{ user.key }} sites-enabled symlink absent"
      ansible.builtin.command: "a2dissite {{ user.key }}"
      register: users_apache_site_enabled_absent
      when: users_apache_site_enabled.stat.exists and users_apache_site_enabled.stat.islnk

    - name: Conditional Apache restart
      block:

        - name: "apache2ctl configtest to check deletion of /etc/apache2/sites-enabled/{{ user.key }}.conf"
          ansible.builtin.command: apache2ctl configtest
          changed_when: '"Syntax OK" not in users_apache2ctl_configtest.stderr'
          check_mode: false
          register: users_apache2ctl_configtest

        - name: Apache restart
          ansible.builtin.service:
            name: apache2
            state: restarted
          when: ( users_apachectl_configtest is defined ) and ( "Syntax OK" in users_apachectl_configtest.stderr )

      when: ( users_apache_site_enabled is defined ) and ( users_apache_site_enabled.stat.exists )

    - name: "Apache {{ user.key }} sites-available file(s) absent"
      ansible.builtin.file:
        path: "{{ file }}"
        state: absent
      loop:
        - "/etc/apache2/sites-available/{{ user.key }}.conf"
        - "/etc/apache2/sites-available/.{{ user.key }}.conf.broken"
        - "/etc/apache2/sites-available/.{{ user.key }}.conf.bak"
      loop_control:
        loop_var: file
        label: "{{ file }}"

    - name: "Apache suEXEC config for {{ user.key }} absent"
      ansible.builtin.file:
        path: "/etc/apache2/suexec/{{ user.key }}"
        state: absent

    - name: "Certcheck crontab for {{ user.key }} absent"
      ansible.builtin.cron:
        name: "Cert check for {{ user.key }}.{{ ansible_fqdn }}"
        job: "ssl-cert-check -qac {{ le_dir }}/{{ user.key }}.{{ ansible_fqdn }}.cert.pem -e 'root@localhost'"
        state: absent

    - name: "Keys and certs for {{ user.key }}.{{ ansible_fqdn }} absent"
      ansible.builtin.file:
        path: "{{ path }}"
        state: absent
      loop:
        - "/root/.acme.sh/{{ user.key }}.{{ ansible_fqdn }}_ecc"
        - "/etc/ssl/le/{{ user.key }}.{{ ansible_fqdn }}.cert.pem"
        - "/etc/ssl/le/{{ user.key }}.{{ ansible_fqdn }}.fullchain.pem"
        - "/etc/ssl/le/{{ user.key }}.{{ ansible_fqdn }}.key.pem"
        - "/etc/ssl/le/{{ user.key }}.{{ ansible_fqdn }}.ca.pem"
      loop_control:
        loop_var: path
        label: "{{ path }}"

  tags:
    - users

# TODO There is no Matomo site:delete command yet, when there is this should perhaps be added here
# https://github.com/digitalist-se/extratools/issues/7
# See also matomo_user_absent.yml
...
