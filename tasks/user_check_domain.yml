# Copyright 2018-2025 Chris Croome
#
# This file is part of the Webarchitects Users Ansible role.
#
# The Webarchitects Users Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects Users Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects Users Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Skip the checks if the domain starts with an asterisk
  block:

    # Locally test that users_domain resolves to a IP address
    - name: Variable users_domain_dig set to empty
      ansible.builtin.set_fact:
        users_domain_dig: ""

    - name: Set a fact for the domain we are testing
      ansible.builtin.set_fact:
        users_domain_dig: "{{ query('community.general.dig', users_domain) | ansible.utils.ipv4 }}"

    - name: Debug domain name and IP address
      ansible.builtin.debug:
        msg:
          - "users_domain: {{ users_domain }}"
          - "ansible_default_ipv4.address: {{ ansible_facts.default_ipv4.address }}"
          - "ansible_all_ipv4_addresses: {{ ansible_facts.all_ipv4_addresses }}"
          - "users_domain_dig: {{ users_domain_dig }}"
          - "users_domain_check: {{ users_domain_check }}"
        verbosity: 1
      when:
        - ( users_domain_check is defined )
        - ( users_domain_dig is defined ) and ( users_domain_dig[0] is not defined )
      tags:
        - debug

    - name: Debug domain name and IP address
      ansible.builtin.debug:
        msg:
          - "users_domain: {{ users_domain }}"
          - "ansible_default_ipv4.address: {{ ansible_facts.default_ipv4.address }}"
          - "ansible_all_ipv4_addresses: {{ ansible_facts.all_ipv4_addresses }}"
          - "users_domain_dig[0]: {{ users_domain_dig[0] }}"
          - "users_domain_check: {{ users_domain_check }}"
        verbosity: 1
      when:
        - ( users_domain_check is defined )
        - ( users_domain_dig is defined ) and ( users_domain_dig[0] is defined )
      tags:
        - debug

    - name: "Warn if {{ users_domain }} which resolves to {{ users_domain_dig }} is not a IPv4 address"
      ansible.builtin.debug:
        msg: "{{ users_domain }} appears not to resolve to a IP address"
      when:
        - ( users_domain_dig == [] ) or ( users_domain_dig | length == 0 )
        - ( users_domain_checks is not defined ) or ( users_domain_check != "strict" )

    - name: "Fail if {{ users_domain }} which resolves to {{ users_domain_dig }} is not a IPv4 address"
      ansible.builtin.fail:
        msg: "{{ users_domain }} appears not to resolve to a IP address"
      when:
        - ( users_domain_dig == [] ) or ( users_domain_dig | length == 0 )
        - ( users_domain_check is defined ) and ( users_domain_check == "strict" )

    - name: "Warn if {{ users_domain }} which resolves to {{ users_domain_dig[0] }} doesn't resolve to an IP address assigned to this server"
      ansible.builtin.debug:
        msg: "{{ users_domain_dig[0] }} not in {{ ansible_facts.all_ipv4_addresses }}"
      when:
        - users_domain_dig[0] is defined
        - users_domain_dig[0] not in ansible_facts.all_ipv4_addresses
        - ( users_domain_check is not defined ) or ( users_domain_check is defined and users_domain_check != "strict" )
        - ( users_reverse_proxy is not defined ) or ( users_reverse_proxy != "cloudflare" )
      tags:
        - debug

    - name: "Fail if {{ users_domain }} which resolves to {{ users_domain_dig[0] }} doesn't resolve to an IP address assigned to this server"
      ansible.builtin.fail:
        msg: "{{ users_domain_dig[0] }} not in {{ ansible_facts.all_ipv4_addresses }}"
      when:
        - users_domain_dig[0] is defined
        - users_domain_dig[0] not in ansible_facts.all_ipv4_addresses
        - users_domain_check is defined
        - users_domain_check == "strict"
        - ( users_reverse_proxy is not defined ) or ( users_reverse_proxy != "cloudflare" )

  when: users_domain is not regex('^[*][.].*$')
  tags:
    - users
...
