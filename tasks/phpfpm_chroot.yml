---
- name: Get all groups
  getent:
    database: group
    split: ':'
  tags:
    - users-update
    - users-chroot
    - phpfpm

- debug:
    var: getent_group
    verbosity: 2
  tags:
    - users-update
    - users-chroot
    - phpfpm

- name: Stat /usr/sbin/apache2
  stat:
    path: /usr/sbin/apache2
  register: users_apache2
  tags:
    - users-update
    - users-chroot
    - phpfpm

- name: /etc/apache2/localhost.d present
  file:
    path: /etc/apache2/localhost.d
    state: directory
  when: users_apache2.stat.exists
  tags:
    - users-update
    - users-chroot
    - phpfpm

- name: Stat /usr/sbin/nginx
  stat:
    path: /usr/sbin/nginx
  register: users_nginx
  tags:
    - users-update
    - users-chroot
    - phpfpm

- name: /etc/nginx/localhost.d present
  file:
    path: /etc/nginx/localhost.d
    state: directory
  when: users_nginx.stat.exists
  tags:
    - users-update
    - users-chroot
    - phpfpm

- name: PHP FPM users absent
  block:

    - name: Users PHP FPM pool.d file absent
      file:
        path: "/etc/php/{{ users_phpfpm_version }}/fpm/pool.d/{{ item.key }}.conf"
        state: absent
      loop: "{{ users | dict2items }}"
      tags:
        - users-update
        - users-chroot
        - phpfpm

    - name: Users Apache PHP FPM localhost.d file absent
      file:
        path: "/etc/apache2/localhost.d/{{ item.key }}.conf"
        state: absent
      loop: "{{ users | dict2items }}"
      when: users_apache2.stat.exists
      tags:
        - users-update
        - users-chroot
        - phpfpm

    - name: Users Nginx PHP FPM localhost.d file present
      file:
        path: "/etc/nginx/localhost.d/{{ item.key }}.conf"
        state: absent
      loop: "{{ users | dict2items }}"
      when: users_nginx.stat.exists
      tags:
        - users-update
        - users-chroot
        - phpfpm

  when: ( item.value.users_state is defined and item.value.users_state == "absent" ) or ( "phpfpm" not in item.value.users_groups or "chroot" not in item.value.users_groups )

- name: PHP FPM users present
  block:

    - name: Users PHP FPM log directory present
      file:
        path: "{{ item.value.users_home | default(users_basedir + '/' + item.key) }}/logs"
        state: directory
        owner: root
        group: "{{ item.key }}"
        mode: 0750
      loop: "{{ users | dict2items }}"
      when: ( item.value.users_state is undefined or item.value.users_state == "present" ) and ( "phpfpm" in item.value.users_groups and "chroot" in item.value.users_groups )
      tags:
        - users-update
        - users-chroot
        - phpfpm

    - name: Users PHP FPM mail log touched
      file:
        path: "{{ item.value.users_home | default(users_basedir + '/' + item.key) }}/logs/php-fpm.mail.log"
        state: touch
        owner: "{{ item.key }}"
        group: "{{ item.key }}"
        mode: 0640
      loop: "{{ users | dict2items }}"
      when: ( item.value.users_state is undefined or item.value.users_state == "present" ) and ( "phpfpm" in item.value.users_groups and "chroot" in item.value.users_groups )
      tags:
        - users-update
        - users-chroot
        - phpfpm

    - name: Users PHP FPM slow log touched
      file:
        path: "{{ item.value.users_home | default(users_basedir + '/' + item.key) }}/logs/php-fpm.slow.log"
        state: touch
        owner: root
        group: "{{ item.key }}"
        mode: 0640
      loop: "{{ users | dict2items }}"
      when: ( item.value.users_state is undefined or item.value.users_state == "present" ) and ( "phpfpm" in item.value.users_groups and "chroot" in item.value.users_groups )
      tags:
        - users-update
        - users-chroot
        - phpfpm

    - name: Users PHP FPM access log touched
      file:
        path: "{{ item.value.users_home | default(users_basedir + '/' + item.key) }}/logs/php-fpm.access.log"
        state: touch
        owner: root
        group: "{{ item.key }}"
        mode: 0640
      loop: "{{ users | dict2items }}"
      when: ( item.value.users_state is undefined or item.value.users_state == "present" ) and ( "phpfpm" in item.value.users_groups and "chroot" in item.value.users_groups )
      tags:
        - users-update
        - users-chroot
        - phpfpm

    - name: Users PHP FPM error log touched
      file:
        path: "{{ item.value.users_home | default(users_basedir + '/' + item.key) }}/logs/php-fpm.error.log"
        state: touch
        owner: root
        group: "{{ item.key }}"
        mode: 0640
      loop: "{{ users | dict2items }}"
      when: ( item.value.users_state is undefined or item.value.users_state == "present" ) and ( "phpfpm" in item.value.users_groups and "chroot" in item.value.users_groups )
      tags:
        - users-update
        - users-chroot
        - phpfpm

    - name: Check the PHP FPM pm variables
      include_role:
        name: php-fpm
        tasks_from: pool_check.yml
      vars:
        phpfpm_pm: "{{ item.value.users_phpfpm_pm | default('ondemand') }}"
        phpfpm_pm_max_children: "{{ item.value.users_phpfpm_max_children | default('2') }}"
        phpfpm_pm_start_servers: "{{ item.value.users_phpfpm_pm_start_servers | default('1') }}"
        phpfpm_pm_min_spare_servers: "{{ item.value.users_phpfpm_pm_min_spare_servers | default('1') }}"
        phpfpm_pm_max_spare_servers: "{{ item.value.users_phpfpm_pm_max_spare_servers | default('1') }}"
      loop: "{{ users | dict2items }}"
      tags:
        - users-update
        - users-chroot
        - phpfpm

    - name: Users PHP FPM pool.d file present
      template:
        src: templates/phpfpm_chroot_user.conf.j2
        dest: "/etc/php/{{ users_phpfpm_version }}/fpm/pool.d/{{ item.key }}.conf"
      loop: "{{ users | dict2items }}"
      when: ( item.value.users_state is undefined or item.value.users_state == "present" ) and ( "phpfpm" in item.value.users_groups and "chroot" in item.value.users_groups )
      tags:
        - users-update
        - users-chroot
        - phpfpm

    - name: Users Apache PHP FPM localhost.d file present
      template:
        src: apache_localhost.conf.j2
        dest: "/etc/apache2/localhost.d/{{ item.key }}.conf"
      loop: "{{ users | dict2items }}"
      when: ( users_apache2.stat.exists ) and ( item.value.users_state is undefined or item.value.users_state == "present" ) and ( "phpfpm" in item.value.users_groups and "chroot" in item.value.users_groups )
      tags:
        - users-update
        - users-chroot
        - phpfpm

    - name: Users Nginx PHP FPM localhost.d file present
      template:
        src: nginx_localhost.conf.j2
        dest: "/etc/nginx/localhost.d/{{ item }}.conf"
      loop: "{{ users | dict2items }}"
      when: ( users_nginx.stat.exists ) and ( item.value.users_state is undefined or item.value.users_state == "present" ) and ( "phpfpm" in item.value.users_groups and "chroot" in item.value.users_groups )
      tags:
        - users-update
        - users-chroot
        - phpfpm

  when: ( users_phpfpm_version is defined ) and ( "phpfpm" in getent_group and "chroot" in getent_group )

- name: Restart php-fpm
  service:
    name: "php{{ users_phpfpm_version }}-fpm"
    state: restarted
  tags:
    - users-update
    - users-chroot
    - phpfpm
...
