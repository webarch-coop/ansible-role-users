# Copyright 2018-2025 Chris Croome
#
# This file is part of the Webarchitects Users Ansible role.
#
# The Webarchitects Users Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects Users Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects Users Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
# TODO Include Tasks to check Apache variables

- name: Geenrate Apache config and enable / disable the config and restart Apache
  block:

    - name: Check Apache status
      ansible.builtin.command: service apache2 status
      check_mode: false
      changed_when: false
      register: users_apache2_status

    - name: Fail if Apache is not running
      ansible.builtin.fail:
        msg: "Apache is not running!"
      when: users_apache2_status.rc == 3

    - name: "Check if the Apache config for {{ user.key }} exists"
      ansible.builtin.stat:
        path: "/etc/apache2/sites-available/{{ user.key }}.conf"
      register: users_apache_conf_check

    - name: "As the Apache config for {{ user.key }} exists create a backup of it"
      ansible.builtin.copy:
        src: "/etc/apache2/sites-available/{{ user.key }}.conf"
        dest: "/etc/apache2/sites-available/.{{ user.key }}.conf.bak"
        remote_src: true
        mode: "0644"
        owner: root
        group: root
      when: users_apache_conf_check.stat.exists

    - name: "Apache {{ user.key }} sites-available file present"
      ansible.builtin.template:
        src: apache.conf.j2
        dest: "/etc/apache2/sites-available/{{ user.key }}.conf"
        trim_blocks: true
        lstrip_blocks: true
        mode: "0644"
        owner: root
        group: root
      register: users_apache_conf

    - name: "Check the Apache sites-enabled symlink for {{ user.key }}"
      ansible.builtin.stat:
        path: "/etc/apache2/sites-enabled/{{ user.key }}.conf"
      register: users_apache_conf_site_enabled_symlink

    - name: Enable Apache sites, configtest and restart
      block:

        - name: "Apache {{ user.key }} sites-enabled symlink present"
          ansible.builtin.command: "a2ensite {{ user.key }}"
          register: users_a2ensite
          changed_when: ( "already enabled" not in users_a2ensite.stdout )

        - name: "apache2ctl configtest to check /etc/apache2/sites-enabled/{{ user.key }}.conf"
          ansible.builtin.command: apache2ctl configtest
          check_mode: false
          changed_when: false
          register: users_apache2ctl_configtest

        - name: Apache restart
          ansible.builtin.service:
            name: apache2
            state: restarted
          when:
            - not ansible_check_mode
            - users_apache2ctl_configtest is defined
            - ( "Syntax OK" in users_apache2ctl_configtest.stderr )

        - name: Pause to allow Apache to sort itself out
          ansible.builtin.pause:
            seconds: 4

        - name: Check Apache status
          ansible.builtin.command: service apache2 status
          check_mode: false
          changed_when: false
          register: users_apache2_status

        - name: Fail if Apache is not running
          ansible.builtin.fail:
            msg: "Apache is not running, for a temp fix try: a2dissite {{ user.key }} && service apache2 start"
          when: users_apache2_status.rc == 3

      rescue:

        - name: Standard out from apache2ctl configtest
          ansible.builtin.debug:
            msg:
              - "apache2ctl configtest stdout: {{ users_apache2ctl_configtest.stdout }}"
            verbosity: 1

        - name: Standard error from apache2ctl configtest
          ansible.builtin.debug:
            msg:
              - "apache2ctl configtest stderr: {{ users_apache2ctl_configtest.stderr }}"
            verbosity: 1

        - name: "Apache configtest or restart failed, writing failed config to /etc/apache2/sites-available/.{{ user.key }}.conf.broken"
          ansible.builtin.copy:
            src: "/etc/apache2/sites-available/{{ user.key }}.conf"
            dest: "/etc/apache2/sites-available/.{{ user.key }}.conf.broken"
            remote_src: true
            mode: "0644"
            owner: root
            group: root

        - name: "Check if a backup of the Apache config for {{ user.key }} exists"
          ansible.builtin.stat:
            path: "/etc/apache2/sites-available/.{{ user.key }}.conf.bak"
          register: users_apache_conf_backup_check

        - name: "Apache configtest or restart failed, reverting to previous config from /etc/apache2/sites-available/.{{ user.key }}.conf.bak"
          ansible.builtin.copy:
            src: "/etc/apache2/sites-available/.{{ user.key }}.conf.bak"
            dest: "/etc/apache2/sites-available/{{ user.key }}.conf"
            remote_src: true
            mode: "0644"
            owner: root
            group: root
          when: users_apache_conf_backup_check.stat.exists

        - name: "Apache {{ user.key }} sites-enabled symlink absent"
          ansible.builtin.command: "a2dissite {{ user.key }}"
          register: users_a2dissite
          changed_when: '"already enabled" not in users_a2dissite.stdout'
          when: not users_apache_conf_backup_check.stat.exists

        - name: Apache restart
          ansible.builtin.service:
            name: apache2
            state: restarted

        - name: Pause to allow Apache to sort itself out
          ansible.builtin.pause:
            seconds: 4

        - name: Check Apache status
          ansible.builtin.command: service apache2 status
          check_mode: false
          changed_when: false
          register: users_apache2_status

        - name: Fail if Apache is not running
          ansible.builtin.fail:
            msg: "Apache is not running, for a temp fix try: a2dissite {{ user.key }} && service apache2 start"
          when: users_apache2_status.rc == 3

        - name: Fail as apache2ctl configtest or apache2ctl restart failed
          ansible.builtin.fail:
            msg:
              - "apache2ctl configtest or restart failed for {{ user.key }} and as a result changes that might prevent a restart have been reverted."
              - "The broken config is available in /etc/apache2/sites-available/.{{ user.key }}.conf.broken"
              - "The configtest stderr: {{ users_apache2ctl_configtest.stderr }}"

      when: >-
        ( ( users_apache_conf.changed | bool ) or
        ( not users_apache_conf_site_enabled_symlink.stat.exists | bool ) ) and
        ( ( user.value.users_apache_virtual_hosts_enabled is not defined ) or
        ( user.value.users_apache_virtual_hosts_enabled is defined and user.value.users_apache_virtual_hosts_enabled | bool ) )

    - name: Disable Apache sites, configtest and restart
      block:

        - name: "Apache {{ user.key }} sites-enabled symlink absent"
          ansible.builtin.command: "a2dissite {{ user.key }}"
          register: users_a2dissite
          changed_when: ( "already disabled" not in users_a2dissite.stdout )

        - name: Restart Apache
          block:

            - name: Apache restart
              ansible.builtin.service:
                name: apache2
                state: restarted

            - name: Pause to allow Apache to sort itself out
              ansible.builtin.pause:
                seconds: 4

            - name: Check Apache status
              ansible.builtin.command: service apache2 status
              check_mode: false
              changed_when: false
              register: users_apache2_status

            - name: Fail if Apache is not running
              ansible.builtin.fail:
                msg: "Apache is not running, for a temp fix try: a2dissite {{ user.key }} && service apache2 start"
              when: users_apache2_status.rc == 3

          when: users_a2dissite.changed | bool

      when:
        - user.value.users_apache_virtual_hosts_enabled is defined
        - not user.value.users_apache_virtual_hosts_enabled | bool
        - users_apache_conf_site_enabled_symlink.stat.exists | bool

  tags:
    - users
...
