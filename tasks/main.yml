# Copyright 2018-2025 Chris Croome
#
# This file is part of the Webarchitects Users Ansible role.
#
# The Webarchitects Users Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects Users Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects Users Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Webarchitects Ansible User role role skipped
  ansible.builtin.debug:
    msg:
      - "The tasks in the Users role are not being run since the users variable is not defined, empty or not a dictionary."
      - "Debug users | type_debug: {{ users | ansible.builtin.type_debug }}"
  when: >-
    ( users is not defined ) or
    ( users is defined and users | ansible.builtin.type_debug != "dict" ) or
    ( users is defined and users == {} )
  tags:
    - users

- name: Webarchitects Ansible User Role
  block:

    - name: Debug the hostvars variable names that start with users_
      ansible.builtin.debug:
        var: usersvarnames
        verbosity: 3
      when: usersvarnames is defined

    - name: Debug the hostvars variable names that start with users_
      ansible.builtin.debug:
        var: usershostvars
        verbosity: 2
      when: usershostvars is defined

    - name: Debug the users dictionary
      ansible.builtin.debug:
        var: users
        verbosity: 2

    - name: Check users_ variables using meta/argument_specs.yml
      ansible.builtin.validate_argument_spec:
        argument_spec: "{{ (lookup('ansible.builtin.file', 'meta/argument_specs.yml') | ansible.builtin.from_yaml)['argument_specs']['main']['options'] }}"
        provided_arguments: "{{ usershostvars }}"
      when:
        - users_verify is defined
        - users_verify | bool

    - name: Include the users tasks
      ansible.builtin.include_tasks: users.yml

  when:
    - users is defined
    - users | ansible.builtin.type_debug == "dict"
    - users != {}
  tags:
    - users
...
