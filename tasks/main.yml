---
- name: Packages present
  apt:
    pkg:
      - bc
      - mutt
      - python-dns
      - python-dnspython
      - python3-dnspython
      - python-passlib
      - slay
      - vim
      - whois
    state: present
  tags:
    - users-packages

- name: System setup and checks
  include_tasks: system.yml
  tags:
    - users

- name: Set an empty users_update array
  set_fact:
    users_update: []
  when: users_update is not defined
  tags:
    - users

- name: Set users to update to all
  block:

    - name: Add all the users to the users_update array as users_update_strategy is not set or set to all
      set_fact:
        users_update: "{{ users_update }} + [ '{{ user.key }}' ]"
      loop: "{{ users | dict2items }}"
      loop_control:
        loop_var: user
        label: "{{ user.key }}"

    - name: Print the users to update if users_update_strategy is not set or set to all
      debug:
        msg: "User to update: {{ users_update }}"

  when:
    - ( users_update_strategy is not defined ) or ( users_update_strategy == "all" )
  tags:
    - users

- name: Check which users accounts are changed
  block:

    - name: Check users changed
      include_tasks: users_changed.yml

    - name: Print the changed users to update
      debug:
        msg: "User to update: {{ users_update }}"

  when:
    - ( users_update_strategy is defined ) and ( users_update_strategy == "changed" )
  tags:
    - users

- name: Print users to add or update
  debug:
    msg: "User to update: {{ user }}"
    verbosity: 1
  when:
    - ( users_update is defined ) and ( users_update != [] )
    - ( user.key is defined ) and ( user.key in users_update )
    - ( user.value.users_state is not defined ) or ( user.value.users_state != "absent" )
  loop: "{{ users | dict2items }}"
  loop_control:
    loop_var: user
    label: "{{ user.key }}"

- name: User absent loop
  include_tasks: user_absent.yml
  when:
    - ( users_update is defined ) and ( users_update != [] )
    - ( user.key is defined ) and ( user.key in users_update )
    - ( user.value.users_state is defined ) and ( user.value.users_state == "absent" )
  loop: "{{ users | dict2items }}"
  loop_control:
    loop_var: user
    label: "{{ user.key }}"
  tags:
    - users
    - apache
    - phpfpm
    - users-chroot
    - users-cron
    - users-fstab
    - users-scripts
    - users-update

- name: Check variables for users to update
  include_tasks: user_check.yml
  when:
    - ( users_update is defined ) and ( users_update != [] )
    - ( user.key is defined ) and ( user.key in users_update )
    - ( user.value.users_state is not defined ) or ( user.value.users_state != "absent" )
  loop: "{{ users | dict2items }}"
  loop_control:
    loop_var: user
    label: "{{ user.key }}"
  tags:
    - users

- name: User present loop
  include_tasks: user_present.yml
  when:
    - ( users_update is defined ) and ( users_update != [] )
    - ( user.key is defined ) and ( user.key in users_update )
    - ( user.value.users_state is not defined ) or ( user.value.users_state == "present" )
  loop: "{{ users | dict2items }}"
  loop_control:
    loop_var: user
    label: "{{ user.key }}"
  tags:
    - apache
    - phpfpm
    - users-chroot
    - users-cron
    - users-fstab
    - users-scripts
    - users-update

- name: Users quota CSV file updated
  block:

    - name: "Updated users quotas written to {{ quota_dir }}/quota_user.csv and md5sum printed"
      shell: "repquota {{ quota_dir }}  --output=csv > {{ quota_dir }}/quota_user.csv ; chmod 600 {{ quota_dir }}/quota_user.csv ; md5sum {{ quota_dir }}/quota_user.csv"
      register: users_repquota_md5sum_after
      check_mode: false
      changed_when: users_repquota_md5sum_before.stdout != users_repquota_md5sum_after.stdout
      tags:
        - users-update
        - users-quota

    - name: Updated users quotas fetched
      fetch:
        src: "{{ quota_dir }}/quota_user.csv"
        dest: /tmp/
      check_mode: false
      when: users_repquota_md5sum_before.stdout != users_repquota_md5sum_after.stdout
      tags:
        - users-update
        - users-quota

  when: quota_dir is defined

- name: Users state files updated
  loop: "{{ users | dict2items }}"
  loop_control:
    loop_var: user
    label: "{{ user.key }}"
  when: user.key in users_update
  include_tasks: user_updated.yml

- name: Firewall tasks included
  include_tasks: firewall.yml
  when: ( users_firewall is defined ) and ( users_firewall == True )
  tags:
    - users-firewall
...
