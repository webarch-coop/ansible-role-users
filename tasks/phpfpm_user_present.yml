---
# TODO Include Tasks to check PHP FPM variables
#
- name: "PHP FPM config present for {{ user.key }}"
  block:

    - name: Debug users_phpfpm_version
      debug:
        var: users_phpfpm_version
        verbosity: 2

    - name: Debug getent_group
      debug:
        var: getent_group
        verbosity: 2

    - name: Users PHP FPM log directory present
      file:
        path: "{{ user.value.users_home | default(users_basedir + '/' + user.key) }}/logs"
        state: directory
        owner: root
        group: "{{ user.value.users_group | default(user.key) }}"
        mode: 0750

    - name: Users PHP FPM logs touched
      file:
        path: "{{ user.value.users_home | default(users_basedir + '/' + user.key) }}/logs/{{ log }}"
        state: touch
        access_time: preserve
        modification_time: preserve
        owner: "{{ user.key }}"
        group: "{{ user.value.users_group | default(user.key) }}"
        mode: 0600
      loop:
        - php-fpm.mail.log
        - php-fpm.slow.log
        - php-fpm.access.log
        - php-fpm.error.log
      loop_control:
        loop_var: log
        label: "{{ log }}"

    - name: Users PHP FPM log rotation config in place
      template:
        src: phpfpm_user_logrotate.j2
        dest: "/etc/logrotate.d/phpfpm_{{ user.key }}"
        owner: root
        group: root
        mode: 0755

    - name: Check the PHP FPM pm variables
      include_role:
        name: php
        tasks_from: pool_check.yml
      vars:
        php_pm: "{{ user.value.users_phpfpm_pm | default('dynamic') }}"
        php_pm_max_children: "{{ user.value.users_phpfpm_max_children | default('2') | int }}"
        php_pm_start_servers: "{{ user.value.users_phpfpm_pm_start_servers | default('1') | int }}"
        php_pm_min_spare_servers: "{{ user.value.users_phpfpm_pm_min_spare_servers | default('1') | int }}"
        php_pm_max_spare_servers: "{{ user.value.users_phpfpm_pm_max_spare_servers | default('1') | int }}"

    - name: "Check if /etc/php/{{ users_phpfpm_version }}/fpm/pool.d/{{ user.key }}.conf exists"
      stat:
        path: "/etc/php/{{ users_phpfpm_version }}/fpm/pool.d/{{ user.key }}.conf"
      register: users_phpfpm_pool_conf_check

    - name: "Copy /etc/php/{{ users_phpfpm_version }}/fpm/pool.d/{{ user.key }}.conf"
      copy:
        src: "/etc/php/{{ users_phpfpm_version }}/fpm/pool.d/{{ user.key }}.conf"
        dest: "/etc/php/{{ users_phpfpm_version }}/fpm/pool.d/.{{ user.key }}.conf.bak"
        remote_src: true
        mode: 0644
        owner: root
        group: root
      when: users_phpfpm_pool_conf_check.stat.exists

    - name: "PHP FPM pool.d file present for {{ user.key }}"
      template:
        src: phpfpm_user.conf.j2
        dest: "/etc/php/{{ users_phpfpm_version }}/fpm/pool.d/{{ user.key }}.conf"
        mode: 0644
        owner: root
        group: root
      register: users_phpfpm_pool_conf

    - name: "PHP FPM pool.d configtest for {{ user.key }}"
      block:

        - name: "PHP FPM pool.d configtest for {{ user.key }}"
          command: "php-fpm{{ users_phpfpm_version }} --test"
          register: users_phpfpm_pool_configtest

        - name: "PHP FPM restarted for changes for {{ user.key }}"
          service:
            name: "php{{ users_phpfpm_version }}-fpm"
            state: restarted
          when:
            - not ansible_check_mode
            - users_phpfpm_pool_configtest is defined
            - ( "test is successful" in users_phpfpm_pool_configtest.stderr )

      rescue:

        - name: "php-fpm{{ users_phpfpm_version }} --test failed, saving failed config"
          copy:
            src: "/etc/php/{{ users_phpfpm_version }}/fpm/pool.d/{{ user.key }}.conf"
            dest: "/etc/php/{{ users_phpfpm_version }}/fpm/pool.d/.{{ user.key }}.conf.broken"
            remote_src: true
            mode: 0644
            owner: root
            group: root

        - name: "php-fpm{{ users_phpfpm_version }} --test failed, so reverting changes"
          copy:
            src: "/etc/php/{{ users_phpfpm_version }}/fpm/pool.d/.{{ user.key }}.conf.bak"
            dest: "/etc/php/{{ users_phpfpm_version }}/fpm/pool.d/{{ user.key }}.conf"
            remote_src: true
            mode: 0644
            owner: root
            group: root
          when: users_phpfpm_pool_conf_check.stat.exists

        - name: "php-fpm{{ users_phpfpm_version }} --test failed, so removing config"
          file:
            path: "/etc/php/{{ users_phpfpm_version }}/fpm/pool.d/{{ user.key }}.conf"
            state: absent
          when: not users_phpfpm_pool_conf_check.stat.exists

        - name: "Fail as php-fpm{{ users_phpfpm_version }} --test failed"
          fail:
            msg:
              - "php-fpm{{ users_phpfpm_version }} --test failed for {{ user.key }} and as a result php-fpm has not been restarted and no changes that would prevent a restart have been left in place, you need to check the YAML for this user."
              - "The broken config is available in /etc/php/{{ users_phpfpm_version }}/fpm/pool.d/.{{ user.key }}.conf.broken"
              - "The error was: {{ users_phpfpm_pool_configtest.stderr }}"

      when: users_phpfpm_pool_conf.changed

    - name: Users Apache PHP FPM localhost.d file present
      template:
        src: apache_localhost.conf.j2
        dest: "/etc/apache2/localhost.d/{{ user.key }}.conf"
        mode: 0644
        owner: root
        group: root
      when:
        - '"apache2" in ansible_facts.packages'

    - name: Users Nginx PHP FPM localhost.d file present
      template:
        src: nginx_localhost.conf.j2
        dest: "/etc/nginx/localhost.d/{{ item }}.conf"
        mode: 0644
        owner: root
        group: root
      when: ( "nginx" in ansible_facts.packages )

    - name: Alias php via ~/.bash_aliases for CLI usage to include settings from ~/.php.ini
      lineinfile:
        path: "{{ user.value.users_home | default(users_basedir + '/' + user.key) }}/.bash_aliases"
        regexp: '^alias php='
        line: 'alias php="php --php-ini ~/.php.ini"'
        state: present
        create: true
        mode: 0644
        owner: "{{ user.key }}"
        group: "{{ user.value.users_group | default(user.key) }}"

    - name: Users ~/.php.ini file present and sys_temp_dir set to ~/tmp
      lineinfile:
        path: "{{ user.value.users_home | default(users_basedir + '/' + user.key) }}/.php.ini"
        regexp: '^sys_temp_dir = '
        line: 'sys_temp_dir = "/home/{{ user.key }}/tmp"'
        state: present
        create: true
        mode: 0644
        owner: "{{ user.key }}"
        group: "{{ user.value.users_group | default(user.key) }}"

  when: ( users_phpfpm_version is defined ) and ( "phpfpm" in getent_group )
  tags:
    - users
...
