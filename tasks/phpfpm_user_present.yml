---
- name: "PHP FPM config present for {{ user.key }}"
  block:

    - name: Debug getent_group
      ansible.builtin.debug:
        var: getent_group
        verbosity: 3

    - name: Debug users_phpfpm_versions
      ansible.builtin.debug:
        var: users_phpfpm_versions
        verbosity: 2

    - name: Debug users_phpfpm_default_version
      ansible.builtin.debug:
        var: users_phpfpm_default_version
        verbosity: 2

    - name: "Set a fact for the PHP version for {{ user.key }}"
      ansible.builtin.set_fact:
        users_phpfpm_version: "{{ user.value.users_phpfpm_version | default(users_phpfpm_default_version) }}"
        users_phpfpm_version_list:
          - "{{ user.value.users_phpfpm_version | default(users_phpfpm_default_version) }}"

    - name: Debug users_phpfpm_version
      ansible.builtin.debug:
        var: users_phpfpm_version
        verbosity: 2

    - name: "Set facts for PHP package names for version {{ users_phpfpm_version }}"
      ansible.builtin.set_fact:
        users_phpapcu_pkg: "php{{ users_phpfpm_version }}-apcu"
        users_phpcli_pkg: "php{{ users_phpfpm_version }}-cli"
        users_phpdev_pkg: "php{{ users_phpfpm_version }}-dev"
        users_phpdbg_pkg: "php{{ users_phpfpm_version }}-phpdbg"

    - name: "Set a fact for the versions of PHP that are present but not the version used by {{ user.key }}"
      ansible.builtin.set_fact:
        users_phpfpm_versions_absent: "{{ users_phpfpm_versions | difference(users_phpfpm_version_list) }}"

    - name: Debug users_phpfpm_versions_absent
      ansible.builtin.debug:
        var: users_phpfpm_versions_absent
        verbosity: 2

    - name: "Include tasks to remove PHP-FPM pool.d files for PHP versions other than the default one for {{ user.key }}"
      ansible.builtin.include_tasks: phpfpm_pool_file_absent.yml
      loop: "{{ users_phpfpm_versions_absent }}"
      loop_control:
        loop_var: users_phpfpm_ver
        label: "{{ users_phpfpm_ver }}"

    - name: Users PHP FPM log directory present
      ansible.builtin.file:
        path: "{{ user.value.users_home | default(users_basedir + '/' + user.key) }}/logs"
        state: directory
        owner: root
        group: "{{ user.value.users_group | default(user.key) }}"
        mode: "0750"

    - name: Users PHP FPM logs touched
      ansible.builtin.file:
        path: "{{ user.value.users_home | default(users_basedir + '/' + user.key) }}/logs/{{ log }}"
        state: touch
        access_time: preserve
        modification_time: preserve
        owner: "{{ user.key }}"
        group: "{{ user.value.users_group | default(user.key) }}"
        mode: "0600"
      loop:
        - php-fpm.mail.log
        - php-fpm.slow.log
        - php-fpm.access.log
        - php-fpm.error.log
      loop_control:
        loop_var: log
        label: "{{ log }}"

    - name: Users PHP FPM log rotation config in place
      ansible.builtin.template:
        src: phpfpm_user_logrotate.j2
        dest: "/etc/logrotate.d/phpfpm_{{ user.key }}"
        owner: root
        group: root
        mode: "0755"

    - name: Check the PHP FPM pm variables
      ansible.builtin.include_tasks: phpfpm_pool_check.yml

    - name: "Check if /etc/php/{{ users_phpfpm_version }}/fpm/pool.d/{{ user.key }}.conf exists"
      ansible.builtin.stat:
        path: "/etc/php/{{ users_phpfpm_version }}/fpm/pool.d/{{ user.key }}.conf"
      register: users_phpfpm_pool_conf_check

    - name: "Copy /etc/php/{{ users_phpfpm_version }}/fpm/pool.d/{{ user.key }}.conf"
      ansible.builtin.copy:
        src: "/etc/php/{{ users_phpfpm_version }}/fpm/pool.d/{{ user.key }}.conf"
        dest: "/etc/php/{{ users_phpfpm_version }}/fpm/pool.d/.{{ user.key }}.conf.bak"
        remote_src: true
        mode: "0644"
        owner: root
        group: root
      when: users_phpfpm_pool_conf_check.stat.exists

    - name: "PHP FPM pool.d file present for {{ user.key }}"
      ansible.builtin.template:
        src: phpfpm_user.conf.j2
        dest: "/etc/php/{{ users_phpfpm_version }}/fpm/pool.d/{{ user.key }}.conf"
        mode: "0644"
        owner: root
        group: root
      register: users_phpfpm_pool_conf

    - name: "PHP FPM pool.d configtest for {{ user.key }}"
      block:

        - name: "PHP FPM pool.d configtest for {{ user.key }}"
          ansible.builtin.command: "php-fpm{{ users_phpfpm_version }} --test"
          register: users_phpfpm_pool_configtest

        - name: "PHP FPM restarted for changes for {{ user.key }}"
          ansible.builtin.service:
            name: "php{{ users_phpfpm_version }}-fpm"
            state: restarted
          when:
            - not ansible_check_mode
            - users_phpfpm_pool_configtest is defined
            - ( "test is successful" in users_phpfpm_pool_configtest.stderr )

      rescue:

        - name: "php-fpm{{ users_phpfpm_version }} --test failed, saving failed config"
          ansible.builtin.copy:
            src: "/etc/php/{{ users_phpfpm_version }}/fpm/pool.d/{{ user.key }}.conf"
            dest: "/etc/php/{{ users_phpfpm_version }}/fpm/pool.d/.{{ user.key }}.conf.broken"
            remote_src: true
            mode: "0644"
            owner: root
            group: root

        - name: "php-fpm{{ users_phpfpm_version }} --test failed, so reverting changes"
          ansible.builtin.copy:
            src: "/etc/php/{{ users_phpfpm_version }}/fpm/pool.d/.{{ user.key }}.conf.bak"
            dest: "/etc/php/{{ users_phpfpm_version }}/fpm/pool.d/{{ user.key }}.conf"
            remote_src: true
            mode: "0644"
            owner: root
            group: root
          when: users_phpfpm_pool_conf_check.stat.exists

        - name: "php-fpm{{ users_phpfpm_version }} --test failed, so removing config"
          ansible.builtin.file:
            path: "/etc/php/{{ users_phpfpm_version }}/fpm/pool.d/{{ user.key }}.conf"
            state: absent
          when: not users_phpfpm_pool_conf_check.stat.exists

        - name: "Fail as php-fpm{{ users_phpfpm_version }} --test failed"
          ansible.builtin.fail:
            msg:
              - "php-fpm{{ users_phpfpm_version }} --test failed for {{ user.key }} and as a result php-fpm has not been restarted and no changes that would prevent a restart have been left in place, you need to check the YAML for this user."
              - "The broken config is available in /etc/php/{{ users_phpfpm_version }}/fpm/pool.d/.{{ user.key }}.conf.broken"
              - "The error was: {{ users_phpfpm_pool_configtest.stderr }}"

      when: users_phpfpm_pool_conf.changed

    - name: Users Apache PHP FPM localhost.d file present
      ansible.builtin.template:
        src: apache_localhost.conf.j2
        dest: "/etc/apache2/localhost.d/{{ user.key }}.conf"
        mode: "0644"
        owner: root
        group: root
      when:
        - '"apache2" in ansible_facts.packages'

    - name: Users Nginx PHP FPM localhost.d file present
      ansible.builtin.template:
        src: nginx_localhost.conf.j2
        dest: "/etc/nginx/localhost.d/{{ item }}.conf"
        mode: "0644"
        owner: root
        group: root
      when: ( "nginx" in ansible_facts.packages )

    - name: PHP CLI configuration requires the CLI package to be installed
      ansible.builtin.assert:
        that:
          - users_phpcli_pkg in ansible_facts.packages()

    # https://github.com/oerdnj/deb.sury.org/wiki/Managing-Multiple-Versions
    - name: PHP CLI configuration present
      block:

        - name: Users php symlink in place
          ansible.builtin.file:
            state: link
            src: "/usr/bin/php{{ users_phpfpm_version }}"
            dest: "{{ user.value.users_home | default(users_basedir + '/' + user.key) }}/{{ users_home_bin }}/php"
            mode: "0777"
            follow: false
            owner: "{{ user.key }}"
            group: "{{ user.value.users_group | default(user.key) }}"

        - name: Users php-config symlink in place
          ansible.builtin.file:
            state: link
            src: "/usr/bin/php{{ users_phpfpm_version }}-config"
            dest: "{{ user.value.users_home | default(users_basedir + '/' + user.key) }}/{{ users_home_bin }}/php-config"
            mode: "0777"
            follow: false
            owner: "{{ user.key }}"
            group: "{{ user.value.users_group | default(user.key) }}"
          when: users_phpdev_pkg in ansible_facts.packages()

        - name: Users phpdbg symlink in place
          ansible.builtin.file:
            state: link
            src: "/usr/bin/php{{ users_phpfpm_version }}dbg"
            dest: "{{ user.value.users_home | default(users_basedir + '/' + user.key) }}/{{ users_home_bin }}/phpdbg"
            mode: "0777"
            follow: false
            owner: "{{ user.key }}"
            group: "{{ user.value.users_group | default(user.key) }}"
          when: users_phpdbg_pkg in ansible_facts.packages()

        - name: Users phpize symlink in place
          ansible.builtin.file:
            state: link
            src: "/usr/bin/php{{ users_phpfpm_version }}ize"
            dest: "{{ user.value.users_home | default(users_basedir + '/' + user.key) }}/{{ users_home_bin }}/phpize"
            mode: "0777"
            follow: false
            owner: "{{ user.key }}"
            group: "{{ user.value.users_group | default(user.key) }}"
          when: users_phpdev_pkg in ansible_facts.packages()

        - name: Alias php via ~/.bash_aliases for CLI usage to include settings from ~/.php.ini
          ansible.builtin.lineinfile:
            path: "{{ user.value.users_home | default(users_basedir + '/' + user.key) }}/.bash_aliases"
            regexp: '^alias php='
            line: 'alias php="php --php-ini ~/.php.ini"'
            state: present
            create: true
            mode: "0600"
            owner: "{{ user.key }}"
            group: "{{ user.value.users_group | default(user.key) }}"

        # The following three lineinfiles could be updated to use community.general.ini_file
        - name: Users ~/.php.ini file present and sys_temp_dir set to ~/tmp
          ansible.builtin.lineinfile:
            path: "{{ user.value.users_home | default(users_basedir + '/' + user.key) }}/.php.ini"
            regexp: '^sys_temp_dir = '
            line: 'sys_temp_dir = "/home/{{ user.key }}/tmp"'
            state: present
            create: true
            mode: "0640"
            owner: "{{ user.key }}"
            group: "{{ user.value.users_group | default(user.key) }}"

        - name: Users ~/.php.ini file present and memory_limit set to -1
          ansible.builtin.lineinfile:
            path: "{{ user.value.users_home | default(users_basedir + '/' + user.key) }}/.php.ini"
            regexp: '^memory_limit = '
            line: 'memory_limit = -1'
            state: present
            create: true
            mode: "0640"
            owner: "{{ user.key }}"
            group: "{{ user.value.users_group | default(user.key) }}"

        - name: Users ~/.php.ini file present and apc.enable_cli set to 1
          ansible.builtin.lineinfile:
            path: "{{ user.value.users_home | default(users_basedir + '/' + user.key) }}/.php.ini"
            regexp: '^apc.enable_cli = '
            line: 'apc.enable_cli = 1'
            state: present
            create: true
            mode: "0640"
            owner: "{{ user.key }}"
            group: "{{ user.value.users_group | default(user.key) }}"
          when: users_phpapcu_pkg in ansible_facts.packages()

      when: users_phpcli_pkg in ansible_facts.packages() )

  when: ( users_phpfpm_version is defined ) and ( "phpfpm" in getent_group )
  tags:
    - users
...
