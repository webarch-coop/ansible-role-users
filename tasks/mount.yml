# Copyright 2018-2024 Chris Croome
#
# This file is part of the Webarchitects Users Ansible role.
#
# The Webarchitects Users Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects Users Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects Users Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Check if a filesystem is mounted and mount it when it is not
  block:

    - name: "Check if {{ users_mount_src }} exists"
      ansible.builtin.stat:
        path: "{{ users_mount_src }}"
      check_mode: false
      changed_when: false
      register: users_mount_check
      failed_when: ( not users_mount_check.stat.exists ) or ( not users_mount_check.stat.isdir )

    - name: "Check if {{ users_mount_path }} exists"
      ansible.builtin.stat:
        path: "{{ users_mount_path }}"
      check_mode: false
      changed_when: false
      register: users_mount_path_check
      failed_when: ( not users_mount_path_check.stat.exists ) or ( not users_mount_path_check.stat.isdir )

    - name: Check if mounted and mount filesystem if not
      block:

        - name: "Check if {{ users_mount_path }} is mounted"
          ansible.builtin.command: "findmnt {{ users_mount_path }}"
          check_mode: false
          changed_when: false
          register: users_findmnt
          failed_when: users_findmnt.rc is not regex('^0|1$')

        - name: "Disk {{ users_mount_path }} mounted"
          ansible.posix.mount:
            src: "{{ users_mount_src }}"
            path: "{{ users_mount_path }}"
            opts: "{{ users_mount_opts }}"
            fstype: "{{ users_mount_fstype | default('ext4') }}"
            state: "{{ users_mount_state | default('mounted') }}"
          when: users_findmnt.rc == 1

      when: ( users_mount_path_check.stat.exists ) and ( users_mount_path_check.stat.exists )

  tags:
    - users
...
