# Copyright 2018-2024 Chris Croome
#
# This file is part of the Webarchitects Users Ansible role.
#
# The Webarchitects Users Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects Users Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects Users Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Users scripts file in place
  block:

    - name: Check if the user HOME bin directory exists
      ansible.builtin.stat:
        path: "{{ user.value.users_home | default(users_basedir + '/' + user.key) }}/{{ users_home_bin }}"
      register: users_home_bin_path

    - name: "Blank {{ user.value.users_home | default(users_basedir + '/' + user.key) }}/{{ users_home_bin }}/cron_daily.sh in place"
      ansible.builtin.template:
        src: cron_daily.sh.j2
        dest: "{{ user.value.users_home | default(users_basedir + '/' + user.key) }}/{{ users_home_bin }}/cron_daily.sh"
        force: false
        owner: "{{ user.key }}"
        group: "{{ user.value.users_group | default(user.key) }}"
        mode: "0750"
      when:
        - ( users_home_bin_path.stat.exists | bool )
        - ( user.value.users_system is not defined ) or ( not user.value.users_system | bool )

    - name: "Check that the {{ user.value.users_home | default(users_basedir + '/' + user.key) }}/{{ users_home_bin }}/cron_daily.sh file exists"
      ansible.builtin.stat:
        path: "{{ user.value.users_home | default(users_basedir + '/' + user.key) }}/{{ users_home_bin }}/cron_daily.sh"
      register: users_cron_daily_path

    - name: "Daily scripts in place for {{ user.key }}"
      ansible.builtin.blockinfile:
        path: "{{ user.value.users_home | default(users_basedir + '/' + user.key) }}/{{ users_home_bin }}/cron_daily.sh"
        block: |
          {% if user.value.users_daily_scripts is defined %}
          {% for users_daily_script in user.value.users_daily_scripts %}
          {{ users_daily_script }}
          {% endfor %}
          {% else %}
          # None
          {% endif %}
        state: present
        create: false
        marker: "# {mark} ANSIBLE SCRIPTS"
        owner: "{{ user.key }}"
        group: "{{ user.value.users_group | default(user.key) }}"
        mode: "0700"
      when:
        - ( users_home_bin_path.stat.exists | bool )
        - ( user.value.users_system is not defined ) or ( not user.value.users_system | bool )
        - ( users_cron_daily_path.stat.exists | bool )

    - name: "Blank {{ user.value.users_home | default(users_basedir + '/' + user.key) }}/{{ users_home_bin }}/cron_hourly.sh in place"
      ansible.builtin.template:
        src: cron_hourly.sh.j2
        dest: "{{ user.value.users_home | default(users_basedir + '/' + user.key) }}/{{ users_home_bin }}/cron_hourly.sh"
        force: false
        owner: "{{ user.key }}"
        group: "{{ user.value.users_group | default(user.key) }}"
        mode: "0750"
      when:
        - ( users_home_bin_path.stat.exists | bool )
        - ( user.value.users_system is not defined ) or ( not user.value.users_system | bool )

    - name: "Check that the {{ user.value.users_home | default(users_basedir + '/' + user.key) }}/{{ users_home_bin }}/cron_hourly.sh file exists"
      ansible.builtin.stat:
        path: "{{ user.value.users_home | default(users_basedir + '/' + user.key) }}/{{ users_home_bin }}/cron_hourly.sh"
      register: users_cron_hourly_path

    - name: "Hourly scripts in place for {{ user.key }}"
      ansible.builtin.blockinfile:
        path: "{{ user.value.users_home | default(users_basedir + '/' + user.key) }}/{{ users_home_bin }}/cron_hourly.sh"
        block: |
          {% if user.value.users_hourly_scripts is defined %}
          {% for users_hourly_script in user.value.users_hourly_scripts %}
          {{ users_hourly_script }}
          {% endfor %}
          {% else %}
          # None
          {% endif %}
        state: present
        create: false
        marker: "# {mark} ANSIBLE SCRIPTS"
        owner: "{{ user.key }}"
        group: "{{ user.value.users_group | default(user.key) }}"
        mode: "0750"
      when:
        - ( users_home_bin_path.stat.exists | bool )
        - ( user.value.users_system is not defined ) or ( not user.value.users_system | bool )
        - ( users_cron_hourly_path.stat.exists | bool )

    - name: "Blank {{ user.value.users_home | default(users_basedir + '/' + user.key) }}/{{ users_home_bin }}/cron_minutely.sh in place"
      ansible.builtin.template:
        src: cron_minutely.sh.j2
        dest: "{{ user.value.users_home | default(users_basedir + '/' + user.key) }}/{{ users_home_bin }}/cron_minutely.sh"
        force: false
        owner: "{{ user.key }}"
        group: "{{ user.value.users_group | default(user.key) }}"
        mode: "0750"
      when:
        - ( users_home_bin_path.stat.exists | bool )
        - ( user.value.users_system is not defined ) or ( not user.value.users_system | bool )

    - name: "Check that the {{ user.value.users_home | default(users_basedir + '/' + user.key) }}/{{ users_home_bin }}/cron_minutely.sh file exists"
      ansible.builtin.stat:
        path: "{{ user.value.users_home | default(users_basedir + '/' + user.key) }}/{{ users_home_bin }}/cron_minutely.sh"
      register: users_cron_minutely_path

    - name: "Minutely scripts in place for {{ user.key }}"
      ansible.builtin.blockinfile:
        path: "{{ user.value.users_home | default(users_basedir + '/' + user.key) }}/{{ users_home_bin }}/cron_minutely.sh"
        block: |
          {% if user.value.users_minutely_scripts is defined %}
          {% for users_minutely_script in user.value.users_minutely_scripts %}
          {{ users_minutely_script }}
          {% endfor %}
          {% else %}
          # None
          {% endif %}
        state: present
        create: false
        marker: "# {mark} ANSIBLE SCRIPTS"
        owner: "{{ user.key }}"
        group: "{{ user.value.users_group | default(user.key) }}"
        mode: "0750"
      when:
        - ( users_home_bin_path.stat.exists | bool )
        - ( user.value.users_system is not defined ) or ( not user.value.users_system | bool )
        - ( users_cron_minutely_path.stat.exists | bool )

  tags:
    - users
...
