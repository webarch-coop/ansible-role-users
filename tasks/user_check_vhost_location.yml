# Copyright 2018-2025 Chris Croome
#
# This file is part of the Webarchitects Users Ansible role.
#
# The Webarchitects Users Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects Users Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects Users Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: "Apache VirtualHost checks {{ vhost.key }} for {{ user.key }}"
  block:

    - name: Debug the Location variables
      ansible.builtin.debug:
        var: loc
        verbosity: "{% if ansible_check_mode | bool %}0{% else %}1{% endif %}"

    - name: "Either location or match is required for a Location or LocationMatch directive for {{ vhost.key }} VirtualHost for {{ user.key }}"
      ansible.builtin.assert:
        that:
          - ( loc.location is defined ) or ( loc.match is defined )
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"

    # https://httpd.apache.org/docs/2.4/mod/mod_authn_core.html#authtype
    - name: "Check authtype is set to None, Basic, Digest or Form for users_apache_locations for {{ vhost.key }} VirtualHost for {{ user.key }} if defined"
      ansible.builtin.assert:
        that:
          - loc.authtype is regex("(?i)^None|Basic|Digest|Form$")
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"
      when: loc.authtype is defined

    # https://httpd.apache.org/docs/2.4/mod/mod_authz_core.html#require
    - name: "Check require for for locations for {{ vhost.key }} VirtualHost for {{ user.key }} if defined"
      block:

        - name: "Check that require is set to a non-empty array for users_apache_locations for {{ vhost.key }} VirtualHost for {{ user.key }} if defined"
          ansible.builtin.assert:
            that:
              - loc.require | length
              - loc.require[0] is defined
            quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"

        - name: "Check that require is set to a valid option for users_apache_locations for {{ vhost.key }} VirtualHost for {{ user.key }} if defined"
          ansible.builtin.assert:
            that:
              - req is regex("(?i)[not]?all granted|[not]?all denied|[not]?env .*|[not]?method .*|[not]?expr .*|[not]?user .*|[not]?group .*|[not]?valid-user|[not]?ip .*|local")
            quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"
          loop: "{{ loc.require }}"
          loop_control:
            loop_var: req
            label: "{{ req }}"

      when: loc.require is defined

    - name: "Check that redirect is set to a URL for users_apache_locations for {{ vhost.key }} VirtualHost for {{ user.key }} if defined"
      ansible.builtin.assert:
        that:
          - loc.redirect | length
          - loc.redirect is regex("http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\(\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+")
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"
      when: loc.redirect is defined

  tags:
    - users
...
