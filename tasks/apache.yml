---
- name: Apache configuration
  block:

    - name: Check loaded Apache modules
      block:

        - name: Register the loaded Apache modules
          ansible.builtin.command: a2query -m
          check_mode: false
          changed_when: false
          register: users_apache_modules_check

      rescue:

        - name: No mods enabled
          ansible.builtin.set_fact:
            users_apache_modules_loaded: []
          when: ( "No module matches" in users_apache_modules_check.stderr )

    - name: Set an array of loaded Apache modules
      block:

        - name: Debug the loaded modules
          ansible.builtin.debug:
            var: users_apache_modules_check.stdout_lines
            verbosity: 3

        - name: Set users_apache_modules_loaded to an empty array
          ansible.builtin.set_fact:
            users_apache_modules_loaded: []

        # TODO Replace this loop with map https://git.coop/-/snippets/111
        - name: Set an array of the loaded modules
          ansible.builtin.set_fact:
            users_apache_modules_loaded: "{{ users_apache_modules_loaded + [line.split(' ')[0]] }}"
          loop: "{{ users_apache_modules_check.stdout_lines }}"
          loop_control:
            loop_var: line
            label: "{{ line }}"

      when:
        - users_apache_modules_check.stdout is defined
        - users_apache_modules_check.stderr | length == 0

    - name: Debug loaded modules
      ansible.builtin.debug:
        var: users_apache_modules_loaded
        verbosity: 3

    - name: Check that Apache suexec is enabled when users_apache_chroot_suexec is true
      ansible.builtin.assert:
        that:
          - ( "suexec" in users_apache_modules_loaded )
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"
      when: users_apache_chroot_suexec

    - name: Check that Apache proxy_fcgi is enabled when users_phpfpm is true
      ansible.builtin.assert:
        that:
          - ( "proxy_fcgi" in users_apache_modules_loaded )
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"
      when: users_phpfpm

    - name: Debug Apache chroot variable
      ansible.builtin.debug:
        var: users_apache_chroot
        verbosity: 3
      when: users_apache_chroot is defined

    - name: Apache chroot present configuration
      ansible.builtin.include_tasks: apache_chroot_present.yml
      when:
        - ( users_apache_chroot is defined ) and ( users_apache_chroot )
        - ( users_apache_chroot_dir is defined )

    - name: Apache chroot absent configuration
      ansible.builtin.include_tasks: apache_chroot_absent.yml
      when:
        - ( users_apache_chroot_remove is defined ) and ( users_apache_chroot_remove )
        - ( users_apache_chroot is defined ) and ( not users_apache_chroot )

    - name: Users Apache logrotation config in place
      ansible.builtin.template:
        src: apache_users_logrotate.j2
        dest: /etc/logrotate.d/apache_users_logrotate
        owner: root
        group: root
        mode: "0644"

    - name: Check Apache logrotation config exists
      ansible.builtin.stat:
        path: /etc/logrotate.d/apache_users_logrotate
      register: users_apache_logrotate

    - name: Chreck and run the Apache logrotation
      block:

        - name: Check Apache logrotation config
          ansible.builtin.command: /usr/sbin/logrotate -d /etc/logrotate.d/apache_users_logrotate
          check_mode: false
          changed_when: false

        - name: Run Apache logrotation config
          ansible.builtin.command: /usr/sbin/logrotate -v /etc/logrotate.d/apache_users_logrotate
          changed_when: true

      when: users_apache_logrotate.stat.exists | bool

    - name: Cron job to delete Apache logs when older than 30 days
      ansible.builtin.cron:
        name: Delete Apache log files
        hour: "0"
        minute: "0"
        day: "1"
        job: /usr/bin/find /var/log/apache2/ -mtime +30 -exec  rm {} \;

    - name: "Apache bandwith usage cron task to email {{ users_apache_bandwidth_email }} present"
      ansible.builtin.cron:
        name: "Email monthly Apache bandwidth"
        hour: "1"
        minute: "0"
        day: "1"
        job: "/usr/local/bin/apache_data_usage_by_user {{ users_apache_bandwidth_email }}"
      when: ( users_apache_bandwidth_email is defined ) and ( users_apache_bandwidth_email | length > 0 )

  tags:
    - users
...
