---
- name: Apache certificate tasks
  block:

    # One cert per VirtualHost
    - name: "Let's Encrypt cert per vhost role included for {{ user.key }}"
      include_role:
        name: acmesh
        tasks_from: letsencrypt
      vars:
        common_name: "{{ vhost.value.users_apache_server_name }}"
        subject_alt_names: "{{ vhost.value.users_apache_server_aliases | default([]) }}"
        reloadcmd: "service apache2 reload"
      loop: "{{ user.value.users_apache_virtual_hosts | dict2items }}"
      loop_control:
        loop_var: vhost
        label: "{{ vhost.key }}"
      when:
        - ( users_cert is defined ) and ( users_cert == "vhost" ) and ( not ansible_check_mode )
        - ( apache_mods_enabled is defined ) and ( "md" not in apache_mods_enabled )
      tags:
        - users

    # One cert per user
    - name: "Let's Encrypt one cert per user tasks for {{ user.key }}"
      block:

        - name: "Query the status for {{ apache_mdomain }}"
          uri:
            url: "http://localhost/md-status/{{ user.key }}.{{ inventory_hostname }}"
            return_content: true
            status_code:
              - 200
          check_mode: false
          register: users_mdomain_status

        - name: "Debug the mdomain RSA status for {{ users_mdomain_status }}"
          debug:
            var: users_mdomain_status.json.cert.rsa.ocsp.renewal.last.status
            verbosity: 2
          when: users_mdomain_status.json.cert.rsa is defined

        - name: Run acme.sh tasks when mod_md cert isn't available
          block:

            - name: "Set {{ user.key }}.{{ inventory_hostname }} for commonName and ensure subjectAltNames is an empty array"
              set_fact:
                common_name: "{{ user.key }}.{{ inventory_hostname }}"
                subject_alt_names: []
                reloadcmd: "service apache2 reload"
              check_mode: true

            - name: "Set fact for subjectAltNames for {{ user.key }}"
              set_fact:
                subject_alt_names: "{% set subject_alt_names = subject_alt_names + [ vhost.value.users_apache_server_name ] + vhost.value.users_apache_server_aliases|default([]) %}{{ subject_alt_names | list }}"
              check_mode: true
              loop: "{{ user.value.users_apache_virtual_hosts | dict2items }}"
              loop_control:
                loop_var: vhost
                label: "{{ vhost.key }}"

            - name: "Debug subjectAltNames and commonName for cert for {{ user.key }}"
              debug:
                msg:
                  - "subject_alt_names is set to: {{ subject_alt_names }}"
                  - "common_name is set to: {{ common_name }}"
                verbosity: 1

            - name: "Let's Encrypt cert role included for {{ user.key }}"
              include_role:
                name: acmesh
                tasks_from: letsencrypt
              when: not ansible_check_mode

          when: ( users_mdomain_status.json.cert is dbot defined )

      when:
        - ( users_cert is defined ) and ( users_cert == 'user' )

  tags:
    - apache
...
