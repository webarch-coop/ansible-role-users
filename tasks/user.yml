---
- name: "Set a fact for the {{ user.key }} users own group as a list"
  set_fact:
    users_own_group:
      - "{{ user.key }}"
  tags:
    - users

- name: "Set a fact for the {{ user.key }} users groups which includes the users own group, as a list"
  set_fact:
    users_all_groups:
      - "{{ user.value.users_groups | default(omit) + users_own_group }}"
  when: ( user.value.users_groups is defined ) and ( user.value.users_groups != [] )
  tags:
    - users

- name: "Print debugging info for {{ user.key }}"
  debug:
    msg:
      - "name: {{ user.key }}"
      - "group: {{ user.value.users_group | default(user.key) }}"
      - "groups: {{ user.value.users_groups | default([]) | join(',') or \ omit }}"
      - "all groups: {{ users_all_groups | default([]) | join(',') or \ omit}}"
      - "home: {{ user.value.users_home | default(users_basedir + '/' + user.key) }}"
      - "shell: {{ user.value.users_shell | default('/bin/bash', true) }}"
      - "skeleton: {{ user.value.users_skel | default(omit) }}"
      - "system: {{ user.value.users_system | default('no', false) }}"
      - "editor: {{ user.value.users_editor | default('vim', true) }}"
      - "home owner: {{ user.value.users_home_owner | default(user.key) }}"
      - "home group: {{ user.value.users_home_group | default(user.key) }}"
      - "home mode: {{ user.value.users_home_mode | default(0700) }}"
      - "generate ssh key: {{ user.value.users_generate_ssh_key | default('false') }}"
      # - "email: {{ user.value.users_email }}"
    verbosity: 1

- name: "User account for {{ user.key }} present"
  user:
    name: "{{ user.key }}"
    group: "{{ user.value.users_group | default(user.key) }}"
    groups: "{{ users_all_groups | default([]) | join(',') or \ omit }}"
    home: "{{ user.value.users_home | default(users_basedir + '/' + user.key) }}"
    create_home: true
    shell: "{{ user.value.users_shell | default('/bin/bash', true) }}"
    skeleton: "{{ user.value.users_skel | default(omit) }}"
    generate_ssh_key: "{{ user.value.users_generate_ssh_key | default('false') }}"
    system: "{{ user.value.users_system | default('no', false) }}"
  tags:
    - users

- name: "Chown user home directory owner to {{ user.value.users_home_owner | default(user.key) }}"
  file:
    path: "{{ user.value.users_home | default(users_basedir + '/' + user.key) }}"
    state: directory
    owner: "{{ user.value.users_home_owner | default(user.key) }}"
  tags:
    - users

- name: "Chown user home directory group to {{ user.value.users_home_group | default(user.key) }}"
  file:
    path: "{{ user.value.users_home | default(users_basedir + '/' + user.key) }}"
    state: directory
    group: "{{ user.value.users_home_group | default(user.key) }}"
  tags:
    - users

- name: "Chmod users home directory {{ user.value.users_home_mode | default('0750') }}"
  file:
    path: "{{ user.value.users_home | default(users_basedir + '/' + user.key) }}"
    state: directory
    mode: "{{ user.value.users_home_mode | default('0750') }}"
  tags:
    - users

- debug:
    msg: "name: {{ user.key }} | ssh dir: {{ user.value.users_home | default(users_basedir + '/' + user.key) }}/.ssh"
    verbosity: 1

- name: "Private directories present for {{ user.key }}"
  file:
    path: "{{ user.value.users_home | default(users_basedir + '/' + user.key) }}/{{ dir }}"
    state: directory
    owner: "{{ user.key }}"
    group: "{{ user.value.users_group | default(user.key) }}"
    mode: 0700
  loop:
    - backups
    - bin
    - private
    - tmp
    - .ssh
  loop_control:
    loop_var: dir
    label: "{{ dir }}"
  tags:
    - users-ssh
    - users

- name: "SSH public keys present for {{ user.key }}"
  include_tasks: ssh.yml
  when: ( user.value.users_ssh_public_keys is defined ) and ( user.value.users_ssh_public_keys != [] )
  tags:
    - users-ssh
    - users

- name: "Generate SSH ECDSA keypair for {{ user.key }}"
  command: ssh-keygen -q -t ed25519 -f "{{ user.value.users_home | default(users_basedir + '/' + user.key) }}/.ssh/id_ed25519" -q -N "" -C "root@{{ ansible_fqdn }}"
  args:
    creates: "{{ user.value.users_home | default(users_basedir + '/' + user.key) }}/.ssh/id_ed25519"
  become: true
  become_user: "{{ user.key }}"
  when: ( user.value.users_generate_ssh_key is defined ) and ( user.value.users_generate_ssh_key == True )
  tags:
    - users-ssh
    - users

- name: "Set default editor for {{ user.key }}"
  copy:
    src: "files/{{ user.value.users_editor }}/selected_editor"
    dest: "{{ user.value.users_home | default(users_basedir + '/' + user.key) }}/.selected_editor"
    owner: "{{ user.key }}"
    group: "{{ user.value.users_group | default(user.key) }}"
    mode: 0644
  when: ( user.value.users_editor is defined ) and ( user.value.users_editor != "" )
  tags:
    - users

- name: Vim tasks
  block:

    - name: ".vimrc in place for {{ user.key }}"
      copy:
        src: "files/vim/vimrc"
        dest: "{{ user.value.users_home | default(users_basedir + '/' + user.key) }}/.vimrc"
        owner: "{{ user.key }}"
        group: "{{ user.value.users_group | default(user.key) }}"
        mode: 0644
      tags:
        - users

    - debug:
        msg: "bashrc: {{ user.value.users_home | default(users_basedir + '/' + user.key) }}/.bashrc"
        verbosity: 1

    - name: "vim set to be default editor for {{ user.key }}"
      lineinfile:
        path: "{{ user.value.users_home | default(users_basedir + '/' + user.key) }}/.bashrc"
        line: 'export EDITOR="vim"'
        state: present
        create: true
      tags:
        - users

  when: user.value.users_editor is defined and user.value.users_editor == 'vim'

- name: ".gitconfig in place for {{ user.key }}"
  template:
    src: templates/gitconfig.j2
    dest: "{{ user.value.users_home | default(users_basedir + '/' + user.key) }}/.gitconfig"
    owner: "{{ user.key }}"
    group: "{{ user.value.users_group | default(user.key) }}"
    mode: 0644
  when:
    - ( user.value.users_name is defined and user.value.users_name != "" )
    - ( user.value.users_email is defined and user.value.users_email != "" )
  tags:
    - users
...
