---
# https://github.com/ansible/ansible/issues/10164#issuecomment-73470662
- name: Print debugging info
  debug:
    msg:
      - "name: {{ item.key }}"
      - "group: {{ item.value.users_group | default(item.key) }}"
      - "groups: {{ item.value.users_groups | default([]) | join(',') or \ omit }}"
      - "home: {{ item.value.users_home | default('/home/' + item.key) }}"
      - "shell: {{ item.value.users_shell | default('/bin/bash', true) }}"
      - "skeleton: {{ item.value.users_skel | default(omit) }}"
      - "system: {{ item.value.users_system | default('no', false) }}"
      - "editor: {{ item.value.users_editor | default('vim', true) }}"
      - "home owner: {{ item.value.users_home_owner | default(item.key) }}"
      - "home group: {{ item.value.users_home_group | default(item.key) }}"
      - "home mode: {{ item.value.users_home_mode | default(0700) }}"
    verbosity: 2

- name: "Set a fact for the {{ item.key }}'s groups adding the {{ item.key }} group to the list"
  set_fact:
    users_own_group:
      - "{{ item.key }}"
    users_all_groups: 
      - "{{ users_own_group }}"
      - "{{ item.value.users_groups | default(omit) }}"

- name: Print the users_all_groups variable
  debug:
    var: users_all_groups
    verbosity: 1

- name: "User account for {{ item.key }} present"
  user:
    name: "{{ item.key }}"
    group: "{{ item.value.users_group | default(item.key) }}"
    groups: "{{ item.value.users_groups | default([]) | join(',') or omit }}"
    home: "{{ item.value.users_home | default('/home/' + item.key) }}"
    create_home: true
    shell: "{{ item.value.users_shell | default('/bin/bash', true) }}"
    skeleton: "{{ item.value.users_skel | default(omit) }}"
    generate_ssh_key: "{{ item.value.users_generate_ssh_key | default('no') }}"
    system: "{{ item.value.users_system | default('no', false) }}"

- name: "Chown user home directory owner to {{ item.value.users_home_owner | default(item.key) }}"
  file:
    path: "{{ item.value.users_home | default('/home/' + item.key) }}"
    state: directory
    owner: "{{ item.value.users_home_owner | default(item.key) }}"

- name: "Chown user home directory group to {{ item.value.users_home_group | default(item.key) }}"
  file:
    path: "{{ item.value.users_home | default('/home/' + item.key) }}"
    state: directory
    group: "{{ item.value.users_home_group | default(item.key) }}"

- name: "Chmod users home directory {{ item.value.users_home_mode | default('0750') }}"
  file:
    path: "{{ item.value.users_home | default('/home/' + item.key) }}"
    state: directory
    mode: "{{ item.value.users_home_mode | default('0750') }}"

- debug:
    msg: "name: {{ item.key }} | ssh dir: {{ item.value.users_home | default('/home/' + item.key) }}/.ssh"
    verbosity: 1
  when: item.value.users_ssh_public_keys is defined and item.value.users_ssh_public_keys != ""

- name: "SSH private directories present for {{ item.key }}"
  file:
    path: "{{ item.value.users_home | default('/home/' + item.key) }}/.ssh"
    state: directory
    owner: "{{ item.key }}"
    group: "{{ item.key }}"
    mode: 0700
  when: item.value.users_ssh_public_keys is defined and item.value.users_ssh_public_keys != ""

- name: SSH public keys present
  get_url:
    url: "{{ item.value.users_ssh_public_keys }}"
    dest: "{{ item.value.users_home | default('/home/' + item.key) }}/.ssh/authorized_keys"
    owner: "{{ item.key }}"
    group: "{{ item.key }}"
    mode: 0600
    force: true
  when: item.value.users_ssh_public_keys is defined and item.value.users_ssh_public_keys != ""

- name: Set default editor
  copy:
    src: "files/{{ item.value.users_editor }}/selected_editor"
    dest: "{{ item.value.users_home | default('/home/' + item.key) }}/.selected_editor"
    owner: "{{ item.key }}"
    group: "{{ item.key }}"
    mode: 0644
  when: item.value.users_editor is defined and item.value.users_editor != ""

- name: .vimrc in place
  copy:
    src: "files/vim/vimrc"
    dest: "{{ item.value.users_home | default('/home/' + item.key) }}/.vimrc"
    owner: "{{ item.key }}"
    group: "{{ item.key }}"
    mode: 0644
  when: item.value.users_editor is defined and item.value.users_editor == 'vim'

- debug:
    msg: "bashrc: {{ item.value.users_home | default('/home/' + item.key) }}/.bashrc"
  when: item.value.users_editor is defined and item.value.users_editor == 'vim'

- name: vim set to be default editor
  lineinfile:
    path: "{{ item.value.users_home | default('/home/' + item.key) }}/.bashrc"
    line: 'export EDITOR="vim"'
    state: present
    create: true
  when: item.value.users_editor is defined and item.value.users_editor == 'vim'

- name: .gitconfig in place
  template:
    src: templates/gitconfig.j2
    dest: "{{ item.value.users_home | default('/home/' + item.key) }}/.gitconfig"
    owner: "{{ item.key }}"
    group: "{{ item.key }}"
    mode: 0644
  when: ( item.value.users_name is defined and item.value.users_name != "" ) and ( item.value.users_email is defined and item.value.users_email != "" )
